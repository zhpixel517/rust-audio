<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="806" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="789.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="789.00"> </text><svg id="frames" x="10" width="1180" total_samples="4276"><g><title>CoreAudio`HALC_ProxyObject::GetPropertyData (2 samples, 0.05%)</title><rect x="0.0000%" y="421" width="0.0468%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="431.50"></text></g><g><title>CoreAudio`HALC_Object_GetPropertyData_DAI32 (2 samples, 0.05%)</title><rect x="0.0000%" y="405" width="0.0468%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="2"/><text x="0.2500%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (2 samples, 0.05%)</title><rect x="0.0000%" y="389" width="0.0468%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="2"/><text x="0.2500%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (2 samples, 0.05%)</title><rect x="0.0000%" y="373" width="0.0468%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="2"/><text x="0.2500%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (2 samples, 0.05%)</title><rect x="0.0000%" y="357" width="0.0468%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="2"/><text x="0.2500%" y="367.50"></text></g><g><title>CoreAudio`HALC_ProxyObject::GetPropertyDataSize (1 samples, 0.02%)</title><rect x="0.0468%" y="421" width="0.0234%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="1"/><text x="0.2968%" y="431.50"></text></g><g><title>CoreAudio`HALC_Object_GetPropertyData_DAI32 (1 samples, 0.02%)</title><rect x="0.0468%" y="405" width="0.0234%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="1"/><text x="0.2968%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (1 samples, 0.02%)</title><rect x="0.0468%" y="389" width="0.0234%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="1"/><text x="0.2968%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (1 samples, 0.02%)</title><rect x="0.0468%" y="373" width="0.0234%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="1"/><text x="0.2968%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (1 samples, 0.02%)</title><rect x="0.0468%" y="357" width="0.0234%" height="15" fill="rgb(220,122,19)" fg:x="2" fg:w="1"/><text x="0.2968%" y="367.50"></text></g><g><title>CoreAudio`HALC_ShellDevice::RebuildControlList (4 samples, 0.09%)</title><rect x="0.0000%" y="437" width="0.0935%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="4"/><text x="0.2500%" y="447.50"></text></g><g><title>CoreAudio`HALC_ProxyObjectMap::CopyObjectByObjectID (1 samples, 0.02%)</title><rect x="0.0702%" y="421" width="0.0234%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="1"/><text x="0.3202%" y="431.50"></text></g><g><title>CoreAudio`HALC_ProxyObjectMap::_CreateObject (1 samples, 0.02%)</title><rect x="0.0702%" y="405" width="0.0234%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="1"/><text x="0.3202%" y="415.50"></text></g><g><title>CoreAudio`HALC_ProxyObject::HALC_ProxyObject (1 samples, 0.02%)</title><rect x="0.0702%" y="389" width="0.0234%" height="15" fill="rgb(206,188,39)" fg:x="3" fg:w="1"/><text x="0.3202%" y="399.50"></text></g><g><title>CoreAudio`HALC_ProxyObject::HasProperty (1 samples, 0.02%)</title><rect x="0.0702%" y="373" width="0.0234%" height="15" fill="rgb(217,207,13)" fg:x="3" fg:w="1"/><text x="0.3202%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (1 samples, 0.02%)</title><rect x="0.0702%" y="357" width="0.0234%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="1"/><text x="0.3202%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (1 samples, 0.02%)</title><rect x="0.0702%" y="341" width="0.0234%" height="15" fill="rgb(225,20,46)" fg:x="3" fg:w="1"/><text x="0.3202%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (1 samples, 0.02%)</title><rect x="0.0702%" y="325" width="0.0234%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="1"/><text x="0.3202%" y="335.50"></text></g><g><title>CoreAudio`HALC_ShellDevice::Activate (5 samples, 0.12%)</title><rect x="0.0000%" y="453" width="0.1169%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="5"/><text x="0.2500%" y="463.50"></text></g><g><title>CoreAudio`HALC_ShellDevice::RebuildStreamLists (1 samples, 0.02%)</title><rect x="0.0935%" y="437" width="0.0234%" height="15" fill="rgb(226,26,5)" fg:x="4" fg:w="1"/><text x="0.3435%" y="447.50"></text></g><g><title>CoreAudio`HALC_ProxyObject::GetPropertyData (1 samples, 0.02%)</title><rect x="0.0935%" y="421" width="0.0234%" height="15" fill="rgb(249,33,26)" fg:x="4" fg:w="1"/><text x="0.3435%" y="431.50"></text></g><g><title>CoreAudio`HALC_Object_GetPropertyData_DAI32 (1 samples, 0.02%)</title><rect x="0.0935%" y="405" width="0.0234%" height="15" fill="rgb(235,183,28)" fg:x="4" fg:w="1"/><text x="0.3435%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (1 samples, 0.02%)</title><rect x="0.0935%" y="389" width="0.0234%" height="15" fill="rgb(221,5,38)" fg:x="4" fg:w="1"/><text x="0.3435%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (1 samples, 0.02%)</title><rect x="0.0935%" y="373" width="0.0234%" height="15" fill="rgb(247,18,42)" fg:x="4" fg:w="1"/><text x="0.3435%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (1 samples, 0.02%)</title><rect x="0.0935%" y="357" width="0.0234%" height="15" fill="rgb(241,131,45)" fg:x="4" fg:w="1"/><text x="0.3435%" y="367.50"></text></g><g><title>CoreAudio`HALC_ProxyObjectMap::_CreateObject (1 samples, 0.02%)</title><rect x="0.1169%" y="421" width="0.0234%" height="15" fill="rgb(249,31,29)" fg:x="5" fg:w="1"/><text x="0.3669%" y="431.50"></text></g><g><title>CoreAudio`HALC_ProxyIOContext::RebuildCache (1 samples, 0.02%)</title><rect x="0.1169%" y="405" width="0.0234%" height="15" fill="rgb(225,111,53)" fg:x="5" fg:w="1"/><text x="0.3669%" y="415.50"></text></g><g><title>CoreAudio`HALC_ProxyIOContext::GetPropertyData (1 samples, 0.02%)</title><rect x="0.1169%" y="389" width="0.0234%" height="15" fill="rgb(238,160,17)" fg:x="5" fg:w="1"/><text x="0.3669%" y="399.50"></text></g><g><title>CoreAudio`HALC_ProxyObject::GetPropertyData (1 samples, 0.02%)</title><rect x="0.1169%" y="373" width="0.0234%" height="15" fill="rgb(214,148,48)" fg:x="5" fg:w="1"/><text x="0.3669%" y="383.50"></text></g><g><title>CoreAudio`HALC_Object_GetPropertyData (1 samples, 0.02%)</title><rect x="0.1169%" y="357" width="0.0234%" height="15" fill="rgb(232,36,49)" fg:x="5" fg:w="1"/><text x="0.3669%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (1 samples, 0.02%)</title><rect x="0.1169%" y="341" width="0.0234%" height="15" fill="rgb(209,103,24)" fg:x="5" fg:w="1"/><text x="0.3669%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (1 samples, 0.02%)</title><rect x="0.1169%" y="325" width="0.0234%" height="15" fill="rgb(229,88,8)" fg:x="5" fg:w="1"/><text x="0.3669%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (1 samples, 0.02%)</title><rect x="0.1169%" y="309" width="0.0234%" height="15" fill="rgb(213,181,19)" fg:x="5" fg:w="1"/><text x="0.3669%" y="319.50"></text></g><g><title>CoreAudio`HALC_ProxyObjectMap::CopyObjectByObjectID (2 samples, 0.05%)</title><rect x="0.1169%" y="437" width="0.0468%" height="15" fill="rgb(254,191,54)" fg:x="5" fg:w="2"/><text x="0.3669%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (1 samples, 0.02%)</title><rect x="0.1403%" y="421" width="0.0234%" height="15" fill="rgb(241,83,37)" fg:x="6" fg:w="1"/><text x="0.3903%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (1 samples, 0.02%)</title><rect x="0.1403%" y="405" width="0.0234%" height="15" fill="rgb(233,36,39)" fg:x="6" fg:w="1"/><text x="0.3903%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (1 samples, 0.02%)</title><rect x="0.1403%" y="389" width="0.0234%" height="15" fill="rgb(226,3,54)" fg:x="6" fg:w="1"/><text x="0.3903%" y="399.50"></text></g><g><title>CoreAudio`HALC_ShellPlugIn::ReconcileDeviceList (8 samples, 0.19%)</title><rect x="0.0000%" y="533" width="0.1871%" height="15" fill="rgb(245,192,40)" fg:x="0" fg:w="8"/><text x="0.2500%" y="543.50"></text></g><g><title>CoreAudio`HALC_ShellObject::ExecuteCommand(void  (8 samples, 0.19%)</title><rect x="0.0000%" y="517" width="0.1871%" height="15" fill="rgb(238,167,29)" fg:x="0" fg:w="8"/><text x="0.2500%" y="527.50"></text></g><g><title>CoreAudio`HALB_CommandGate::ExecuteCommand(void  (8 samples, 0.19%)</title><rect x="0.0000%" y="501" width="0.1871%" height="15" fill="rgb(232,182,51)" fg:x="0" fg:w="8"/><text x="0.2500%" y="511.50"></text></g><g><title>CoreAudio`HALC_ShellPlugIn::_ReconcileDeviceList(bool, bool, std::__1::vector&lt;unsigned int, std::__1::allocator&lt;unsigned int&gt;&gt;&amp;, std::__1::vector&lt;unsigned int, std::__1::allocator (8 samples, 0.19%)</title><rect x="0.0000%" y="485" width="0.1871%" height="15" fill="rgb(231,60,39)" fg:x="0" fg:w="8"/><text x="0.2500%" y="495.50"></text></g><g><title>CoreAudio`HALC_ShellObjectMap::CreateObject (8 samples, 0.19%)</title><rect x="0.0000%" y="469" width="0.1871%" height="15" fill="rgb(208,69,12)" fg:x="0" fg:w="8"/><text x="0.2500%" y="479.50"></text></g><g><title>CoreAudio`HALC_ShellDevice::BuildIOContext (3 samples, 0.07%)</title><rect x="0.1169%" y="453" width="0.0702%" height="15" fill="rgb(235,93,37)" fg:x="5" fg:w="3"/><text x="0.3669%" y="463.50"></text></g><g><title>CoreAudio`HALC_ShellDevice::CreateIOContextDescription (1 samples, 0.02%)</title><rect x="0.1637%" y="437" width="0.0234%" height="15" fill="rgb(213,116,39)" fg:x="7" fg:w="1"/><text x="0.4137%" y="447.50"></text></g><g><title>CoreAudio`HALC_ProxyObject::GetPropertyData (1 samples, 0.02%)</title><rect x="0.1637%" y="421" width="0.0234%" height="15" fill="rgb(222,207,29)" fg:x="7" fg:w="1"/><text x="0.4137%" y="431.50"></text></g><g><title>CoreFoundation`CFPropertyListCreateWithData (1 samples, 0.02%)</title><rect x="0.1637%" y="405" width="0.0234%" height="15" fill="rgb(206,96,30)" fg:x="7" fg:w="1"/><text x="0.4137%" y="415.50"></text></g><g><title>CoreFoundation`_CFPropertyListCreateWithData (1 samples, 0.02%)</title><rect x="0.1637%" y="389" width="0.0234%" height="15" fill="rgb(218,138,4)" fg:x="7" fg:w="1"/><text x="0.4137%" y="399.50"></text></g><g><title>CoreFoundation`_CFPropertyListCreateFromUTF8Data (1 samples, 0.02%)</title><rect x="0.1637%" y="373" width="0.0234%" height="15" fill="rgb(250,191,14)" fg:x="7" fg:w="1"/><text x="0.4137%" y="383.50"></text></g><g><title>CoreFoundation`parsePListTag (1 samples, 0.02%)</title><rect x="0.1637%" y="357" width="0.0234%" height="15" fill="rgb(239,60,40)" fg:x="7" fg:w="1"/><text x="0.4137%" y="367.50"></text></g><g><title>CoreFoundation`parseXMLElement (1 samples, 0.02%)</title><rect x="0.1637%" y="341" width="0.0234%" height="15" fill="rgb(206,27,48)" fg:x="7" fg:w="1"/><text x="0.4137%" y="351.50"></text></g><g><title>CoreAudio`HALSystem::InitializeDevices (10 samples, 0.23%)</title><rect x="0.0000%" y="597" width="0.2339%" height="15" fill="rgb(225,35,8)" fg:x="0" fg:w="10"/><text x="0.2500%" y="607.50"></text></g><g><title>CoreAudio`HALPlugInManagement::CreateHALPlugIn (10 samples, 0.23%)</title><rect x="0.0000%" y="581" width="0.2339%" height="15" fill="rgb(250,213,24)" fg:x="0" fg:w="10"/><text x="0.2500%" y="591.50"></text></g><g><title>CoreAudio`HAL_HardwarePlugIn_InitializeWithObjectID(AudioHardwarePlugInInterface**, unsigned int) (10 samples, 0.23%)</title><rect x="0.0000%" y="565" width="0.2339%" height="15" fill="rgb(247,123,22)" fg:x="0" fg:w="10"/><text x="0.2500%" y="575.50"></text></g><g><title>CoreAudio`HALC_ShellPlugIn::ConnectToServer (10 samples, 0.23%)</title><rect x="0.0000%" y="549" width="0.2339%" height="15" fill="rgb(231,138,38)" fg:x="0" fg:w="10"/><text x="0.2500%" y="559.50"></text></g><g><title>CoreAudio`HALC_ShellSimpleProxyList::Reconcile (2 samples, 0.05%)</title><rect x="0.1871%" y="533" width="0.0468%" height="15" fill="rgb(231,145,46)" fg:x="8" fg:w="2"/><text x="0.4371%" y="543.50"></text></g><g><title>CoreAudio`HALC_ProxyObjectMap::CopyObjectByObjectID (2 samples, 0.05%)</title><rect x="0.1871%" y="517" width="0.0468%" height="15" fill="rgb(251,118,11)" fg:x="8" fg:w="2"/><text x="0.4371%" y="527.50"></text></g><g><title>CoreAudio`HALC_ProxyObjectMap::_CreateObject (2 samples, 0.05%)</title><rect x="0.1871%" y="501" width="0.0468%" height="15" fill="rgb(217,147,25)" fg:x="8" fg:w="2"/><text x="0.4371%" y="511.50"></text></g><g><title>CoreAudio`HALC_ProxyObject::HALC_ProxyObject (2 samples, 0.05%)</title><rect x="0.1871%" y="485" width="0.0468%" height="15" fill="rgb(247,81,37)" fg:x="8" fg:w="2"/><text x="0.4371%" y="495.50"></text></g><g><title>CoreAudio`AMCP::Utility::Dispatch_Queue::install_mach_port_death_notification(unsigned int, void  (2 samples, 0.05%)</title><rect x="0.1871%" y="469" width="0.0468%" height="15" fill="rgb(209,12,38)" fg:x="8" fg:w="2"/><text x="0.4371%" y="479.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (2 samples, 0.05%)</title><rect x="0.1871%" y="453" width="0.0468%" height="15" fill="rgb(227,1,9)" fg:x="8" fg:w="2"/><text x="0.4371%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_kq_drain (2 samples, 0.05%)</title><rect x="0.1871%" y="437" width="0.0468%" height="15" fill="rgb(248,47,43)" fg:x="8" fg:w="2"/><text x="0.4371%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`kevent_qos (2 samples, 0.05%)</title><rect x="0.1871%" y="421" width="0.0468%" height="15" fill="rgb(221,10,30)" fg:x="8" fg:w="2"/><text x="0.4371%" y="431.50"></text></g><g><title>CoreAudio`AMCP::Feature_Flags::load_adm_dsp_lib (1 samples, 0.02%)</title><rect x="0.2339%" y="581" width="0.0234%" height="15" fill="rgb(210,229,1)" fg:x="10" fg:w="1"/><text x="0.4839%" y="591.50"></text></g><g><title>libc++.1.dylib`std::__1::__call_once(unsigned long volatile&amp;, void*, void (*) (1 samples, 0.02%)</title><rect x="0.2339%" y="565" width="0.0234%" height="15" fill="rgb(222,148,37)" fg:x="10" fg:w="1"/><text x="0.4839%" y="575.50"></text></g><g><title>CoreAudio`void std::__1::__call_once_proxy[abi:ue170006]&lt;std::__1::tuple&lt;AMCP::Feature_Flags::load_adm_dsp_lib(bool const*)::$_7&amp;&amp;&gt;&gt; (1 samples, 0.02%)</title><rect x="0.2339%" y="549" width="0.0234%" height="15" fill="rgb(234,67,33)" fg:x="10" fg:w="1"/><text x="0.4839%" y="559.50"></text></g><g><title>CoreAudio`AMCP::Log::Scope_Registry::fetch (1 samples, 0.02%)</title><rect x="0.2339%" y="533" width="0.0234%" height="15" fill="rgb(247,98,35)" fg:x="10" fg:w="1"/><text x="0.4839%" y="543.50"></text></g><g><title>CoreAudio`AMCP::Log::Scope_Registry::create(std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (1 samples, 0.02%)</title><rect x="0.2339%" y="517" width="0.0234%" height="15" fill="rgb(247,138,52)" fg:x="10" fg:w="1"/><text x="0.4839%" y="527.50"></text></g><g><title>caulk`caulk::concurrent::messenger::messenger (1 samples, 0.02%)</title><rect x="0.2339%" y="501" width="0.0234%" height="15" fill="rgb(213,79,30)" fg:x="10" fg:w="1"/><text x="0.4839%" y="511.50"></text></g><g><title>caulk`caulk::alloc::get_realtime_safe_resource (1 samples, 0.02%)</title><rect x="0.2339%" y="485" width="0.0234%" height="15" fill="rgb(246,177,23)" fg:x="10" fg:w="1"/><text x="0.4839%" y="495.50"></text></g><g><title>caulk`caulk::alloc::realtime_safe_resource_factory::create (1 samples, 0.02%)</title><rect x="0.2339%" y="469" width="0.0234%" height="15" fill="rgb(230,62,27)" fg:x="10" fg:w="1"/><text x="0.4839%" y="479.50"></text></g><g><title>caulk`caulk::alloc::global_page_cache::instance (1 samples, 0.02%)</title><rect x="0.2339%" y="453" width="0.0234%" height="15" fill="rgb(216,154,8)" fg:x="10" fg:w="1"/><text x="0.4839%" y="463.50"></text></g><g><title>caulk`caulk::alloc::darwin_resource&lt;caulk::alloc::caching_page_allocator&lt;16384ul&gt;, caulk::alloc::memory_resource&gt;::darwin_resource (1 samples, 0.02%)</title><rect x="0.2339%" y="437" width="0.0234%" height="15" fill="rgb(244,35,45)" fg:x="10" fg:w="1"/><text x="0.4839%" y="447.50"></text></g><g><title>caulk`caulk::alloc::details::caching_page_allocator_base::caching_page_allocator_base (1 samples, 0.02%)</title><rect x="0.2339%" y="421" width="0.0234%" height="15" fill="rgb(251,115,12)" fg:x="10" fg:w="1"/><text x="0.4839%" y="431.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from(char const*, int, void*)::$_1::operator() (1 samples, 0.02%)</title><rect x="0.2572%" y="533" width="0.0234%" height="15" fill="rgb(240,54,50)" fg:x="11" fg:w="1"/><text x="0.5072%" y="543.50"></text></g><g><title>dyld`dyld4::RuntimeState::notifyDtrace(std::__1::span (1 samples, 0.02%)</title><rect x="0.2572%" y="517" width="0.0234%" height="15" fill="rgb(233,84,52)" fg:x="11" fg:w="1"/><text x="0.5072%" y="527.50"></text></g><g><title>dyld`dyld4::SyscallDelegate::dtraceRegisterUserProbes (1 samples, 0.02%)</title><rect x="0.2572%" y="501" width="0.0234%" height="15" fill="rgb(207,117,47)" fg:x="11" fg:w="1"/><text x="0.5072%" y="511.50"></text></g><g><title>dyld`__open (1 samples, 0.02%)</title><rect x="0.2572%" y="485" width="0.0234%" height="15" fill="rgb(249,43,39)" fg:x="11" fg:w="1"/><text x="0.5072%" y="495.50"></text></g><g><title>CoreAudio`AVFoundationLibraryCore(char**) (5 samples, 0.12%)</title><rect x="0.2572%" y="581" width="0.1169%" height="15" fill="rgb(209,38,44)" fg:x="11" fg:w="5"/><text x="0.5072%" y="591.50"></text></g><g><title>SoftLinking`_sl_dlopen (5 samples, 0.12%)</title><rect x="0.2572%" y="565" width="0.1169%" height="15" fill="rgb(236,212,23)" fg:x="11" fg:w="5"/><text x="0.5072%" y="575.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from (5 samples, 0.12%)</title><rect x="0.2572%" y="549" width="0.1169%" height="15" fill="rgb(242,79,21)" fg:x="11" fg:w="5"/><text x="0.5072%" y="559.50"></text></g><g><title>dyld`dyld4::RuntimeState::notifyLoad(std::__1::span (4 samples, 0.09%)</title><rect x="0.2806%" y="533" width="0.0935%" height="15" fill="rgb(211,96,35)" fg:x="12" fg:w="4"/><text x="0.5306%" y="543.50"></text></g><g><title>libobjc.A.dylib`map_images (4 samples, 0.09%)</title><rect x="0.2806%" y="517" width="0.0935%" height="15" fill="rgb(253,215,40)" fg:x="12" fg:w="4"/><text x="0.5306%" y="527.50"></text></g><g><title>libobjc.A.dylib`map_images_nolock (4 samples, 0.09%)</title><rect x="0.2806%" y="501" width="0.0935%" height="15" fill="rgb(211,81,21)" fg:x="12" fg:w="4"/><text x="0.5306%" y="511.50"></text></g><g><title>libobjc.A.dylib`_mapStrHash(_NXMapTable*, void const*) (2 samples, 0.05%)</title><rect x="0.3274%" y="485" width="0.0468%" height="15" fill="rgb(208,190,38)" fg:x="14" fg:w="2"/><text x="0.5774%" y="495.50"></text></g><g><title>udp_latency_test`&lt;cpal::platform::platform_impl::Host as cpal::traits::HostTrait&gt;::default_input_device (17 samples, 0.40%)</title><rect x="0.0000%" y="645" width="0.3976%" height="15" fill="rgb(235,213,38)" fg:x="0" fg:w="17"/><text x="0.2500%" y="655.50"></text></g><g><title>CoreAudio`AudioObjectGetPropertyData_mac_imp (17 samples, 0.40%)</title><rect x="0.0000%" y="629" width="0.3976%" height="15" fill="rgb(237,122,38)" fg:x="0" fg:w="17"/><text x="0.2500%" y="639.50"></text></g><g><title>CoreAudio`HALSystem::CheckOutInstance (17 samples, 0.40%)</title><rect x="0.0000%" y="613" width="0.3976%" height="15" fill="rgb(244,218,35)" fg:x="0" fg:w="17"/><text x="0.2500%" y="623.50"></text></g><g><title>CoreAudio`HALSystem::InitializeShell (7 samples, 0.16%)</title><rect x="0.2339%" y="597" width="0.1637%" height="15" fill="rgb(240,68,47)" fg:x="10" fg:w="7"/><text x="0.4839%" y="607.50"></text></g><g><title>CoreFoundation`_CFBundleCreate (1 samples, 0.02%)</title><rect x="0.3742%" y="581" width="0.0234%" height="15" fill="rgb(210,16,53)" fg:x="16" fg:w="1"/><text x="0.6242%" y="591.50"></text></g><g><title>CoreFoundation`CFBundleGetInfoDictionary (1 samples, 0.02%)</title><rect x="0.3742%" y="565" width="0.0234%" height="15" fill="rgb(235,124,12)" fg:x="16" fg:w="1"/><text x="0.6242%" y="575.50"></text></g><g><title>CoreFoundation`_CFBundleRefreshInfoDictionaryAlreadyLocked (1 samples, 0.02%)</title><rect x="0.3742%" y="549" width="0.0234%" height="15" fill="rgb(224,169,11)" fg:x="16" fg:w="1"/><text x="0.6242%" y="559.50"></text></g><g><title>CoreFoundation`_CFBundleCopyInfoDictionaryInDirectoryWithVersion (1 samples, 0.02%)</title><rect x="0.3742%" y="533" width="0.0234%" height="15" fill="rgb(250,166,2)" fg:x="16" fg:w="1"/><text x="0.6242%" y="543.50"></text></g><g><title>CoreFoundation`_CFBundleInfoPlistProcessInfoDictionary (1 samples, 0.02%)</title><rect x="0.3742%" y="517" width="0.0234%" height="15" fill="rgb(242,216,29)" fg:x="16" fg:w="1"/><text x="0.6242%" y="527.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM enumerateKeysAndObjectsWithOptions:usingBlock:] (1 samples, 0.02%)</title><rect x="0.3742%" y="501" width="0.0234%" height="15" fill="rgb(230,116,27)" fg:x="16" fg:w="1"/><text x="0.6242%" y="511.50"></text></g><g><title>CoreFoundation`__NSDICTIONARY_IS_CALLING_OUT_TO_A_BLOCK__ (1 samples, 0.02%)</title><rect x="0.3742%" y="485" width="0.0234%" height="15" fill="rgb(228,99,48)" fg:x="16" fg:w="1"/><text x="0.6242%" y="495.50"></text></g><g><title>CoreFoundation`___CFBundleInfoPlistProcessInfoDictionary_block_invoke (1 samples, 0.02%)</title><rect x="0.3742%" y="469" width="0.0234%" height="15" fill="rgb(253,11,6)" fg:x="16" fg:w="1"/><text x="0.6242%" y="479.50"></text></g><g><title>CoreFoundation`CFStringFind (1 samples, 0.02%)</title><rect x="0.3742%" y="453" width="0.0234%" height="15" fill="rgb(247,143,39)" fg:x="16" fg:w="1"/><text x="0.6242%" y="463.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="0.3742%" y="437" width="0.0234%" height="15" fill="rgb(236,97,10)" fg:x="16" fg:w="1"/><text x="0.6242%" y="447.50"></text></g><g><title>udp_latency_test`cpal::host::coreaudio::macos::Device::build_input_stream_raw (1 samples, 0.02%)</title><rect x="0.3976%" y="645" width="0.0234%" height="15" fill="rgb(233,208,19)" fg:x="17" fg:w="1"/><text x="0.6476%" y="655.50"></text></g><g><title>udp_latency_test`cpal::host::coreaudio::macos::get_io_buffer_frame_size_range (1 samples, 0.02%)</title><rect x="0.3976%" y="629" width="0.0234%" height="15" fill="rgb(216,164,2)" fg:x="17" fg:w="1"/><text x="0.6476%" y="639.50"></text></g><g><title>AudioToolboxCore`AudioUnitGetProperty (1 samples, 0.02%)</title><rect x="0.3976%" y="613" width="0.0234%" height="15" fill="rgb(220,129,5)" fg:x="17" fg:w="1"/><text x="0.6476%" y="623.50"></text></g><g><title>CoreAudio`0x00000001031d4620 (1 samples, 0.02%)</title><rect x="0.3976%" y="597" width="0.0234%" height="15" fill="rgb(242,17,10)" fg:x="17" fg:w="1"/><text x="0.6476%" y="607.50"></text></g><g><title>CoreAudio`0x00000001030cf9c4 (1 samples, 0.02%)</title><rect x="0.3976%" y="581" width="0.0234%" height="15" fill="rgb(242,107,0)" fg:x="17" fg:w="1"/><text x="0.6476%" y="591.50"></text></g><g><title>CoreAudio`AudioDeviceGetProperty (1 samples, 0.02%)</title><rect x="0.3976%" y="565" width="0.0234%" height="15" fill="rgb(251,28,31)" fg:x="17" fg:w="1"/><text x="0.6476%" y="575.50"></text></g><g><title>CoreAudio`HALPlugIn::ObjectGetPropertyData (1 samples, 0.02%)</title><rect x="0.3976%" y="549" width="0.0234%" height="15" fill="rgb(233,223,10)" fg:x="17" fg:w="1"/><text x="0.6476%" y="559.50"></text></g><g><title>CoreAudio`HAL_HardwarePlugIn_ObjectGetPropertyData(AudioHardwarePlugInInterface**, unsigned int, AudioObjectPropertyAddress const*, unsigned int, void const*, unsigned int*, void*) (1 samples, 0.02%)</title><rect x="0.3976%" y="533" width="0.0234%" height="15" fill="rgb(215,21,27)" fg:x="17" fg:w="1"/><text x="0.6476%" y="543.50"></text></g><g><title>CoreAudio`HALC_ShellObject::GetPropertyData (1 samples, 0.02%)</title><rect x="0.3976%" y="517" width="0.0234%" height="15" fill="rgb(232,23,21)" fg:x="17" fg:w="1"/><text x="0.6476%" y="527.50"></text></g><g><title>CoreAudio`HALC_ProxyIOContext::GetPropertyData (1 samples, 0.02%)</title><rect x="0.3976%" y="501" width="0.0234%" height="15" fill="rgb(244,5,23)" fg:x="17" fg:w="1"/><text x="0.6476%" y="511.50"></text></g><g><title>CoreAudio`HALC_ProxyObject::GetPropertyData (1 samples, 0.02%)</title><rect x="0.3976%" y="485" width="0.0234%" height="15" fill="rgb(226,81,46)" fg:x="17" fg:w="1"/><text x="0.6476%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (1 samples, 0.02%)</title><rect x="0.3976%" y="469" width="0.0234%" height="15" fill="rgb(247,70,30)" fg:x="17" fg:w="1"/><text x="0.6476%" y="479.50"></text></g><g><title>udp_latency_test`cpal::host::coreaudio::macos::Device::build_output_stream_raw (1 samples, 0.02%)</title><rect x="0.4210%" y="645" width="0.0234%" height="15" fill="rgb(212,68,19)" fg:x="18" fg:w="1"/><text x="0.6710%" y="655.50"></text></g><g><title>udp_latency_test`cpal::host::coreaudio::macos::audio_unit_from_device (1 samples, 0.02%)</title><rect x="0.4210%" y="629" width="0.0234%" height="15" fill="rgb(240,187,13)" fg:x="18" fg:w="1"/><text x="0.6710%" y="639.50"></text></g><g><title>AudioToolboxCore`AudioComponentInstanceNew (1 samples, 0.02%)</title><rect x="0.4210%" y="613" width="0.0234%" height="15" fill="rgb(223,113,26)" fg:x="18" fg:w="1"/><text x="0.6710%" y="623.50"></text></g><g><title>AudioToolboxCore`Synchronously (1 samples, 0.02%)</title><rect x="0.4210%" y="597" width="0.0234%" height="15" fill="rgb(206,192,2)" fg:x="18" fg:w="1"/><text x="0.6710%" y="607.50"></text></g><g><title>AudioToolboxCore`__AudioComponentInstanceNew_block_invoke (1 samples, 0.02%)</title><rect x="0.4210%" y="581" width="0.0234%" height="15" fill="rgb(241,108,4)" fg:x="18" fg:w="1"/><text x="0.6710%" y="591.50"></text></g><g><title>AudioToolboxCore`instantiate(OpaqueAudioComponent*, unsigned int, bool, void (OpaqueAudioComponentInstance*, int) block_pointer) (1 samples, 0.02%)</title><rect x="0.4210%" y="565" width="0.0234%" height="15" fill="rgb(247,173,49)" fg:x="18" fg:w="1"/><text x="0.6710%" y="575.50"></text></g><g><title>AudioToolboxCore`APComponent::newInstance(unsigned int, bool, void  (1 samples, 0.02%)</title><rect x="0.4210%" y="549" width="0.0234%" height="15" fill="rgb(224,114,35)" fg:x="18" fg:w="1"/><text x="0.6710%" y="559.50"></text></g><g><title>CoreAudio`0x00000001031d28a4 (1 samples, 0.02%)</title><rect x="0.4210%" y="533" width="0.0234%" height="15" fill="rgb(245,159,27)" fg:x="18" fg:w="1"/><text x="0.6710%" y="543.50"></text></g><g><title>CoreAudio`0x0000000103107124 (1 samples, 0.02%)</title><rect x="0.4210%" y="517" width="0.0234%" height="15" fill="rgb(245,172,44)" fg:x="18" fg:w="1"/><text x="0.6710%" y="527.50"></text></g><g><title>CoreAudio`0x00000001030d7a24 (1 samples, 0.02%)</title><rect x="0.4210%" y="501" width="0.0234%" height="15" fill="rgb(236,23,11)" fg:x="18" fg:w="1"/><text x="0.6710%" y="511.50"></text></g><g><title>CoreAudio`0x00000001030cc8b8 (1 samples, 0.02%)</title><rect x="0.4210%" y="485" width="0.0234%" height="15" fill="rgb(205,117,38)" fg:x="18" fg:w="1"/><text x="0.6710%" y="495.50"></text></g><g><title>CoreAudio`0x00000001030cdfc8 (1 samples, 0.02%)</title><rect x="0.4210%" y="469" width="0.0234%" height="15" fill="rgb(237,72,25)" fg:x="18" fg:w="1"/><text x="0.6710%" y="479.50"></text></g><g><title>CoreAudio`0x00000001030cedf8 (1 samples, 0.02%)</title><rect x="0.4210%" y="453" width="0.0234%" height="15" fill="rgb(244,70,9)" fg:x="18" fg:w="1"/><text x="0.6710%" y="463.50"></text></g><g><title>CoreAudio`AudioDeviceGetProperty (1 samples, 0.02%)</title><rect x="0.4210%" y="437" width="0.0234%" height="15" fill="rgb(217,125,39)" fg:x="18" fg:w="1"/><text x="0.6710%" y="447.50"></text></g><g><title>CoreAudio`HALPlugIn::ObjectGetPropertyData (1 samples, 0.02%)</title><rect x="0.4210%" y="421" width="0.0234%" height="15" fill="rgb(235,36,10)" fg:x="18" fg:w="1"/><text x="0.6710%" y="431.50"></text></g><g><title>CoreAudio`HAL_HardwarePlugIn_ObjectGetPropertyData(AudioHardwarePlugInInterface**, unsigned int, AudioObjectPropertyAddress const*, unsigned int, void const*, unsigned int*, void*) (1 samples, 0.02%)</title><rect x="0.4210%" y="405" width="0.0234%" height="15" fill="rgb(251,123,47)" fg:x="18" fg:w="1"/><text x="0.6710%" y="415.50"></text></g><g><title>CoreAudio`HALC_ShellObject::GetPropertyData (1 samples, 0.02%)</title><rect x="0.4210%" y="389" width="0.0234%" height="15" fill="rgb(221,13,13)" fg:x="18" fg:w="1"/><text x="0.6710%" y="399.50"></text></g><g><title>CoreAudio`HALC_ProxyIOContext::GetPropertyData (1 samples, 0.02%)</title><rect x="0.4210%" y="373" width="0.0234%" height="15" fill="rgb(238,131,9)" fg:x="18" fg:w="1"/><text x="0.6710%" y="383.50"></text></g><g><title>CoreAudio`HALC_ProxyObject::GetPropertyData (1 samples, 0.02%)</title><rect x="0.4210%" y="357" width="0.0234%" height="15" fill="rgb(211,50,8)" fg:x="18" fg:w="1"/><text x="0.6710%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (1 samples, 0.02%)</title><rect x="0.4210%" y="341" width="0.0234%" height="15" fill="rgb(245,182,24)" fg:x="18" fg:w="1"/><text x="0.6710%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (1 samples, 0.02%)</title><rect x="0.4210%" y="325" width="0.0234%" height="15" fill="rgb(242,14,37)" fg:x="18" fg:w="1"/><text x="0.6710%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (1 samples, 0.02%)</title><rect x="0.4210%" y="309" width="0.0234%" height="15" fill="rgb(246,228,12)" fg:x="18" fg:w="1"/><text x="0.6710%" y="319.50"></text></g><g><title>AudioToolboxCore`assertXPCServiceReachable(NSString*) (1 samples, 0.02%)</title><rect x="0.4443%" y="517" width="0.0234%" height="15" fill="rgb(213,55,15)" fg:x="19" fg:w="1"/><text x="0.6943%" y="527.50"></text></g><g><title>AudioToolboxCore`CASmartPreferences::Read (1 samples, 0.02%)</title><rect x="0.4443%" y="501" width="0.0234%" height="15" fill="rgb(209,9,3)" fg:x="19" fg:w="1"/><text x="0.6943%" y="511.50"></text></g><g><title>AudioToolboxCore`void CASmartPreferences::AddHandler&lt;long long&gt;(__CFString const*, __CFString const*, long long (*)(void const*, bool&amp;), std::__1::function&lt;void  (1 samples, 0.02%)</title><rect x="0.4443%" y="485" width="0.0234%" height="15" fill="rgb(230,59,30)" fg:x="19" fg:w="1"/><text x="0.6943%" y="495.50"></text></g><g><title>libAudioToolboxUtility.dylib`DYLD-STUB$$__cxa_guard_acquire (1 samples, 0.02%)</title><rect x="0.4443%" y="469" width="0.0234%" height="15" fill="rgb(209,121,21)" fg:x="19" fg:w="1"/><text x="0.6943%" y="479.50"></text></g><g><title>AudioToolboxCore`AudioComponentMgr_RegistrarService::initPhase2 (2 samples, 0.05%)</title><rect x="0.4443%" y="581" width="0.0468%" height="15" fill="rgb(220,109,13)" fg:x="19" fg:w="2"/><text x="0.6943%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.05%)</title><rect x="0.4443%" y="565" width="0.0468%" height="15" fill="rgb(232,18,1)" fg:x="19" fg:w="2"/><text x="0.6943%" y="575.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.05%)</title><rect x="0.4443%" y="549" width="0.0468%" height="15" fill="rgb(215,41,42)" fg:x="19" fg:w="2"/><text x="0.6943%" y="559.50"></text></g><g><title>AudioToolboxCore`invocation function for block in AudioComponentMgr_RegistrarService::connectToRegistrationServer (2 samples, 0.05%)</title><rect x="0.4443%" y="533" width="0.0468%" height="15" fill="rgb(224,123,36)" fg:x="19" fg:w="2"/><text x="0.6943%" y="543.50"></text></g><g><title>Foundation`-[NSXPCConnection initWithMachServiceName:options:] (1 samples, 0.02%)</title><rect x="0.4677%" y="517" width="0.0234%" height="15" fill="rgb(240,125,3)" fg:x="20" fg:w="1"/><text x="0.7177%" y="527.50"></text></g><g><title>libxpc.dylib`xpc_connection_create_mach_service (1 samples, 0.02%)</title><rect x="0.4677%" y="501" width="0.0234%" height="15" fill="rgb(205,98,50)" fg:x="20" fg:w="1"/><text x="0.7177%" y="511.50"></text></g><g><title>libxpc.dylib`_xpc_connection_create (1 samples, 0.02%)</title><rect x="0.4677%" y="485" width="0.0234%" height="15" fill="rgb(205,185,37)" fg:x="20" fg:w="1"/><text x="0.7177%" y="495.50"></text></g><g><title>libdispatch.dylib`_dispatch_unote_create (1 samples, 0.02%)</title><rect x="0.4677%" y="469" width="0.0234%" height="15" fill="rgb(238,207,15)" fg:x="20" fg:w="1"/><text x="0.7177%" y="479.50"></text></g><g><title>AudioToolboxCore`AudioComponentFindNext (3 samples, 0.07%)</title><rect x="0.4443%" y="613" width="0.0702%" height="15" fill="rgb(213,199,42)" fg:x="19" fg:w="3"/><text x="0.6943%" y="623.50"></text></g><g><title>AudioToolboxCore`GlobalComponentPluginMgr() (3 samples, 0.07%)</title><rect x="0.4443%" y="597" width="0.0702%" height="15" fill="rgb(235,201,11)" fg:x="19" fg:w="3"/><text x="0.6943%" y="607.50"></text></g><g><title>AudioToolboxCore`AudioComponentMgr_RegistrarService::retrieveComponents (1 samples, 0.02%)</title><rect x="0.4911%" y="581" width="0.0234%" height="15" fill="rgb(207,46,11)" fg:x="21" fg:w="1"/><text x="0.7411%" y="591.50"></text></g><g><title>CoreFoundation`_CF_forwarding_prep_0 (1 samples, 0.02%)</title><rect x="0.4911%" y="565" width="0.0234%" height="15" fill="rgb(241,35,35)" fg:x="21" fg:w="1"/><text x="0.7411%" y="575.50"></text></g><g><title>CoreFoundation`___forwarding___ (1 samples, 0.02%)</title><rect x="0.4911%" y="549" width="0.0234%" height="15" fill="rgb(243,32,47)" fg:x="21" fg:w="1"/><text x="0.7411%" y="559.50"></text></g><g><title>Foundation`-[NSXPCConnection _sendInvocation:orArguments:count:methodSignature:selector:withProxy:] (1 samples, 0.02%)</title><rect x="0.4911%" y="533" width="0.0234%" height="15" fill="rgb(247,202,23)" fg:x="21" fg:w="1"/><text x="0.7411%" y="543.50"></text></g><g><title>Foundation`__88-[NSXPCConnection _sendInvocation:orArguments:count:methodSignature:selector:withProxy:]_block_invoke_3 (1 samples, 0.02%)</title><rect x="0.4911%" y="517" width="0.0234%" height="15" fill="rgb(219,102,11)" fg:x="21" fg:w="1"/><text x="0.7411%" y="527.50"></text></g><g><title>Foundation`-[NSXPCConnection _decodeAndInvokeReplyBlockWithEvent:sequence:replyInfo:] (1 samples, 0.02%)</title><rect x="0.4911%" y="501" width="0.0234%" height="15" fill="rgb(243,110,44)" fg:x="21" fg:w="1"/><text x="0.7411%" y="511.50"></text></g><g><title>Foundation`__NSXPCCONNECTION_IS_CALLING_OUT_TO_REPLY_BLOCK__ (1 samples, 0.02%)</title><rect x="0.4911%" y="485" width="0.0234%" height="15" fill="rgb(222,74,54)" fg:x="21" fg:w="1"/><text x="0.7411%" y="495.50"></text></g><g><title>CoreFoundation`-[NSInvocation invoke] (1 samples, 0.02%)</title><rect x="0.4911%" y="469" width="0.0234%" height="15" fill="rgb(216,99,12)" fg:x="21" fg:w="1"/><text x="0.7411%" y="479.50"></text></g><g><title>CoreFoundation`__invoking___ (1 samples, 0.02%)</title><rect x="0.4911%" y="453" width="0.0234%" height="15" fill="rgb(226,22,26)" fg:x="21" fg:w="1"/><text x="0.7411%" y="463.50"></text></g><g><title>AudioToolboxCore`invocation function for block in AudioComponentMgr_RegistrarService::retrieveComponents (1 samples, 0.02%)</title><rect x="0.4911%" y="437" width="0.0234%" height="15" fill="rgb(217,163,10)" fg:x="21" fg:w="1"/><text x="0.7411%" y="447.50"></text></g><g><title>AudioToolboxCore`AudioComponentMgr_RegistrarService::mergeServerRegistrations (1 samples, 0.02%)</title><rect x="0.4911%" y="421" width="0.0234%" height="15" fill="rgb(213,25,53)" fg:x="21" fg:w="1"/><text x="0.7411%" y="431.50"></text></g><g><title>AudioToolboxCore`AudioComponentVector::createWithSerializedData (1 samples, 0.02%)</title><rect x="0.4911%" y="405" width="0.0234%" height="15" fill="rgb(252,105,26)" fg:x="21" fg:w="1"/><text x="0.7411%" y="415.50"></text></g><g><title>Foundation`+[NSKeyedUnarchiver unarchivedObjectOfClass:fromData:error:] (1 samples, 0.02%)</title><rect x="0.4911%" y="389" width="0.0234%" height="15" fill="rgb(220,39,43)" fg:x="21" fg:w="1"/><text x="0.7411%" y="399.50"></text></g><g><title>Foundation`+[NSKeyedUnarchiver unarchivedObjectOfClasses:fromData:error:] (1 samples, 0.02%)</title><rect x="0.4911%" y="373" width="0.0234%" height="15" fill="rgb(229,68,48)" fg:x="21" fg:w="1"/><text x="0.7411%" y="383.50"></text></g><g><title>Foundation`-[NSCoder decodeTopLevelObjectOfClasses:forKey:error:] (1 samples, 0.02%)</title><rect x="0.4911%" y="357" width="0.0234%" height="15" fill="rgb(252,8,32)" fg:x="21" fg:w="1"/><text x="0.7411%" y="367.50"></text></g><g><title>Foundation`-[NSCoder __tryDecodeObjectForKey:error:decodeBlock:] (1 samples, 0.02%)</title><rect x="0.4911%" y="341" width="0.0234%" height="15" fill="rgb(223,20,43)" fg:x="21" fg:w="1"/><text x="0.7411%" y="351.50"></text></g><g><title>Foundation`-[NSKeyedUnarchiver decodeObjectOfClasses:forKey:] (1 samples, 0.02%)</title><rect x="0.4911%" y="325" width="0.0234%" height="15" fill="rgb(229,81,49)" fg:x="21" fg:w="1"/><text x="0.7411%" y="335.50"></text></g><g><title>Foundation`-[NSKeyedUnarchiver decodeObjectForKey:] (1 samples, 0.02%)</title><rect x="0.4911%" y="309" width="0.0234%" height="15" fill="rgb(236,28,36)" fg:x="21" fg:w="1"/><text x="0.7411%" y="319.50"></text></g><g><title>Foundation`_decodeObject (1 samples, 0.02%)</title><rect x="0.4911%" y="293" width="0.0234%" height="15" fill="rgb(249,185,26)" fg:x="21" fg:w="1"/><text x="0.7411%" y="303.50"></text></g><g><title>Foundation`_decodeObjectBinary (1 samples, 0.02%)</title><rect x="0.4911%" y="277" width="0.0234%" height="15" fill="rgb(249,174,33)" fg:x="21" fg:w="1"/><text x="0.7411%" y="287.50"></text></g><g><title>AudioToolboxCore`-[_ACComponentVector initWithCoder:] (1 samples, 0.02%)</title><rect x="0.4911%" y="261" width="0.0234%" height="15" fill="rgb(233,201,37)" fg:x="21" fg:w="1"/><text x="0.7411%" y="271.50"></text></g><g><title>Foundation`-[NSKeyedUnarchiver decodeObjectOfClasses:forKey:] (1 samples, 0.02%)</title><rect x="0.4911%" y="245" width="0.0234%" height="15" fill="rgb(221,78,26)" fg:x="21" fg:w="1"/><text x="0.7411%" y="255.50"></text></g><g><title>Foundation`-[NSKeyedUnarchiver decodeObjectForKey:] (1 samples, 0.02%)</title><rect x="0.4911%" y="229" width="0.0234%" height="15" fill="rgb(250,127,30)" fg:x="21" fg:w="1"/><text x="0.7411%" y="239.50"></text></g><g><title>Foundation`_decodeObject (1 samples, 0.02%)</title><rect x="0.4911%" y="213" width="0.0234%" height="15" fill="rgb(230,49,44)" fg:x="21" fg:w="1"/><text x="0.7411%" y="223.50"></text></g><g><title>Foundation`_decodeObjectBinary (1 samples, 0.02%)</title><rect x="0.4911%" y="197" width="0.0234%" height="15" fill="rgb(229,67,23)" fg:x="21" fg:w="1"/><text x="0.7411%" y="207.50"></text></g><g><title>Foundation`-[NSArray(NSArray) initWithCoder:] (1 samples, 0.02%)</title><rect x="0.4911%" y="181" width="0.0234%" height="15" fill="rgb(249,83,47)" fg:x="21" fg:w="1"/><text x="0.7411%" y="191.50"></text></g><g><title>Foundation`-[NSKeyedUnarchiver _decodeArrayOfObjectsForKey:] (1 samples, 0.02%)</title><rect x="0.4911%" y="165" width="0.0234%" height="15" fill="rgb(215,43,3)" fg:x="21" fg:w="1"/><text x="0.7411%" y="175.50"></text></g><g><title>Foundation`_decodeObjectBinary (1 samples, 0.02%)</title><rect x="0.4911%" y="149" width="0.0234%" height="15" fill="rgb(238,154,13)" fg:x="21" fg:w="1"/><text x="0.7411%" y="159.50"></text></g><g><title>AudioToolboxCore`-[_ACComponentWrapper initWithCoder:] (1 samples, 0.02%)</title><rect x="0.4911%" y="133" width="0.0234%" height="15" fill="rgb(219,56,2)" fg:x="21" fg:w="1"/><text x="0.7411%" y="143.50"></text></g><g><title>Foundation`-[NSKeyedUnarchiver decodeObjectOfClasses:forKey:] (1 samples, 0.02%)</title><rect x="0.4911%" y="117" width="0.0234%" height="15" fill="rgb(233,0,4)" fg:x="21" fg:w="1"/><text x="0.7411%" y="127.50"></text></g><g><title>Foundation`-[NSKeyedUnarchiver decodeObjectForKey:] (1 samples, 0.02%)</title><rect x="0.4911%" y="101" width="0.0234%" height="15" fill="rgb(235,30,7)" fg:x="21" fg:w="1"/><text x="0.7411%" y="111.50"></text></g><g><title>Foundation`_decodeObject (1 samples, 0.02%)</title><rect x="0.4911%" y="85" width="0.0234%" height="15" fill="rgb(250,79,13)" fg:x="21" fg:w="1"/><text x="0.7411%" y="95.50"></text></g><g><title>Foundation`_decodeOffsetAndRef (1 samples, 0.02%)</title><rect x="0.4911%" y="69" width="0.0234%" height="15" fill="rgb(211,146,34)" fg:x="21" fg:w="1"/><text x="0.7411%" y="79.50"></text></g><g><title>CoreFoundation`__CFBinaryPlistGetOffsetForValueFromDictionary3 (1 samples, 0.02%)</title><rect x="0.4911%" y="53" width="0.0234%" height="15" fill="rgb(228,22,38)" fg:x="21" fg:w="1"/><text x="0.7411%" y="63.50"></text></g><g><title>CoreFoundation`_CFStringGetCStringPtrInternal (1 samples, 0.02%)</title><rect x="0.4911%" y="37" width="0.0234%" height="15" fill="rgb(235,168,5)" fg:x="21" fg:w="1"/><text x="0.7411%" y="47.50"></text></g><g><title>AudioToolboxCore`APComponent::FromOpaqueComponent (1 samples, 0.02%)</title><rect x="0.5145%" y="597" width="0.0234%" height="15" fill="rgb(221,155,16)" fg:x="22" fg:w="1"/><text x="0.7645%" y="607.50"></text></g><g><title>AudioToolboxCore`ResolvedOpaqueRef&lt;APComponentOrInstance_Opaque&gt;::ResolvedOpaqueRef (1 samples, 0.02%)</title><rect x="0.5145%" y="581" width="0.0234%" height="15" fill="rgb(215,215,53)" fg:x="22" fg:w="1"/><text x="0.7645%" y="591.50"></text></g><g><title>libAudioToolboxUtility.dylib`BaseOpaqueObject::checkRTTI (1 samples, 0.02%)</title><rect x="0.5145%" y="565" width="0.0234%" height="15" fill="rgb(223,4,10)" fg:x="22" fg:w="1"/><text x="0.7645%" y="575.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from(char const*, int, void*)::$_1::operator() (1 samples, 0.02%)</title><rect x="0.5379%" y="469" width="0.0234%" height="15" fill="rgb(234,103,6)" fg:x="23" fg:w="1"/><text x="0.7879%" y="479.50"></text></g><g><title>dyld`dyld4::JustInTimeLoader::applyFixups (1 samples, 0.02%)</title><rect x="0.5379%" y="453" width="0.0234%" height="15" fill="rgb(227,97,0)" fg:x="23" fg:w="1"/><text x="0.7879%" y="463.50"></text></g><g><title>dyld`dyld4::Loader::applyFixupsGeneric(Diagnostics&amp;, dyld4::RuntimeState&amp;, unsigned long long, dyld3::Array&lt;void const*&gt; const&amp;, dyld3::Array&lt;void const*&gt; const&amp;, bool, dyld3::Array (1 samples, 0.02%)</title><rect x="0.5379%" y="437" width="0.0234%" height="15" fill="rgb(234,150,53)" fg:x="23" fg:w="1"/><text x="0.7879%" y="447.50"></text></g><g><title>dyld`dyld4::Loader::setUpPageInLinking(Diagnostics&amp;, dyld4::RuntimeState&amp;, unsigned long, unsigned long long, dyld3::Array (1 samples, 0.02%)</title><rect x="0.5379%" y="421" width="0.0234%" height="15" fill="rgb(228,201,54)" fg:x="23" fg:w="1"/><text x="0.7879%" y="431.50"></text></g><g><title>dyld`invocation function for block in dyld4::Loader::setUpPageInLinking(Diagnostics&amp;, dyld4::RuntimeState&amp;, unsigned long, unsigned long long, dyld3::Array (1 samples, 0.02%)</title><rect x="0.5379%" y="405" width="0.0234%" height="15" fill="rgb(222,22,37)" fg:x="23" fg:w="1"/><text x="0.7879%" y="415.50"></text></g><g><title>dyld`dyld4::setUpPageInLinkingRegions(dyld4::RuntimeState&amp;, dyld4::Loader const*, unsigned long, unsigned short, unsigned short, bool, dyld3::Array&lt;dyld4::PageInLinkingRange&gt; const&amp;, dyld3::Array (1 samples, 0.02%)</title><rect x="0.5379%" y="389" width="0.0234%" height="15" fill="rgb(237,53,32)" fg:x="23" fg:w="1"/><text x="0.7879%" y="399.50"></text></g><g><title>dyld`dyld4::dyld_map_with_linking_np (1 samples, 0.02%)</title><rect x="0.5379%" y="373" width="0.0234%" height="15" fill="rgb(233,25,53)" fg:x="23" fg:w="1"/><text x="0.7879%" y="383.50"></text></g><g><title>dyld`dyld4::signPointer (1 samples, 0.02%)</title><rect x="0.5379%" y="357" width="0.0234%" height="15" fill="rgb(210,40,34)" fg:x="23" fg:w="1"/><text x="0.7879%" y="367.50"></text></g><g><title>CoreFoundation`_CFBundleDlfcnLoadBundle (2 samples, 0.05%)</title><rect x="0.5379%" y="501" width="0.0468%" height="15" fill="rgb(241,220,44)" fg:x="23" fg:w="2"/><text x="0.7879%" y="511.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from (2 samples, 0.05%)</title><rect x="0.5379%" y="485" width="0.0468%" height="15" fill="rgb(235,28,35)" fg:x="23" fg:w="2"/><text x="0.7879%" y="495.50"></text></g><g><title>dyld`dyld4::RuntimeState::notifyLoad(std::__1::span (1 samples, 0.02%)</title><rect x="0.5613%" y="469" width="0.0234%" height="15" fill="rgb(210,56,17)" fg:x="24" fg:w="1"/><text x="0.8113%" y="479.50"></text></g><g><title>libobjc.A.dylib`map_images (1 samples, 0.02%)</title><rect x="0.5613%" y="453" width="0.0234%" height="15" fill="rgb(224,130,29)" fg:x="24" fg:w="1"/><text x="0.8113%" y="463.50"></text></g><g><title>libobjc.A.dylib`map_images_nolock (1 samples, 0.02%)</title><rect x="0.5613%" y="437" width="0.0234%" height="15" fill="rgb(235,212,8)" fg:x="24" fg:w="1"/><text x="0.8113%" y="447.50"></text></g><g><title>libobjc.A.dylib`__sel_registerName(char const*, bool, bool) (1 samples, 0.02%)</title><rect x="0.5613%" y="421" width="0.0234%" height="15" fill="rgb(223,33,50)" fg:x="24" fg:w="1"/><text x="0.8113%" y="431.50"></text></g><g><title>dyld`dyld4::APIs::_dyld_get_objc_selector (1 samples, 0.02%)</title><rect x="0.5613%" y="405" width="0.0234%" height="15" fill="rgb(219,149,13)" fg:x="24" fg:w="1"/><text x="0.8113%" y="415.50"></text></g><g><title>dyld`objc::StringHashTable::tryGetIndex (1 samples, 0.02%)</title><rect x="0.5613%" y="389" width="0.0234%" height="15" fill="rgb(250,156,29)" fg:x="24" fg:w="1"/><text x="0.8113%" y="399.50"></text></g><g><title>AudioToolboxCore`APComponent_FromBundle_Loadable::ResolveFactoryFunction (3 samples, 0.07%)</title><rect x="0.5379%" y="533" width="0.0702%" height="15" fill="rgb(216,193,19)" fg:x="23" fg:w="3"/><text x="0.7879%" y="543.50"></text></g><g><title>CoreFoundation`_CFBundleLoadExecutableAndReturnError (3 samples, 0.07%)</title><rect x="0.5379%" y="517" width="0.0702%" height="15" fill="rgb(216,135,14)" fg:x="23" fg:w="3"/><text x="0.7879%" y="527.50"></text></g><g><title>CoreFoundation`_CFBundleGrokBinaryType (1 samples, 0.02%)</title><rect x="0.5847%" y="501" width="0.0234%" height="15" fill="rgb(241,47,5)" fg:x="25" fg:w="1"/><text x="0.8347%" y="511.50"></text></g><g><title>CoreFoundation`_CFBundleGrokFileType (1 samples, 0.02%)</title><rect x="0.5847%" y="485" width="0.0234%" height="15" fill="rgb(233,42,35)" fg:x="25" fg:w="1"/><text x="0.8347%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`read (1 samples, 0.02%)</title><rect x="0.5847%" y="469" width="0.0234%" height="15" fill="rgb(231,13,6)" fg:x="25" fg:w="1"/><text x="0.8347%" y="479.50"></text></g><g><title>CoreAudio`0x00000001030cc8b8 (1 samples, 0.02%)</title><rect x="0.6080%" y="501" width="0.0234%" height="15" fill="rgb(207,181,40)" fg:x="26" fg:w="1"/><text x="0.8580%" y="511.50"></text></g><g><title>CoreAudio`0x00000001030cf7a4 (1 samples, 0.02%)</title><rect x="0.6080%" y="485" width="0.0234%" height="15" fill="rgb(254,173,49)" fg:x="26" fg:w="1"/><text x="0.8580%" y="495.50"></text></g><g><title>CoreAudio`0x00000001030cf920 (1 samples, 0.02%)</title><rect x="0.6080%" y="469" width="0.0234%" height="15" fill="rgb(221,1,38)" fg:x="26" fg:w="1"/><text x="0.8580%" y="479.50"></text></g><g><title>AudioToolboxCore`AudioConverterNew (1 samples, 0.02%)</title><rect x="0.6080%" y="453" width="0.0234%" height="15" fill="rgb(206,124,46)" fg:x="26" fg:w="1"/><text x="0.8580%" y="463.50"></text></g><g><title>AudioToolboxCore`AudioConverterNewInternal(AudioStreamBasicDescription const*, AudioStreamBasicDescription const*, unsigned int, AudioClassDescription const*, OpaqueAudioConverter**, AudioConverterAPI* (*)(AudioStreamBasicDescription const*, AudioStreamBasicDescription const*, unsigned int, AudioClassDescription const*)) (1 samples, 0.02%)</title><rect x="0.6080%" y="437" width="0.0234%" height="15" fill="rgb(249,21,11)" fg:x="26" fg:w="1"/><text x="0.8580%" y="447.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.02%)</title><rect x="0.6080%" y="421" width="0.0234%" height="15" fill="rgb(222,201,40)" fg:x="26" fg:w="1"/><text x="0.8580%" y="431.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.02%)</title><rect x="0.6080%" y="405" width="0.0234%" height="15" fill="rgb(235,61,29)" fg:x="26" fg:w="1"/><text x="0.8580%" y="415.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="0.6080%" y="389" width="0.0234%" height="15" fill="rgb(219,207,3)" fg:x="26" fg:w="1"/><text x="0.8580%" y="399.50"></text></g><g><title>CoreAudio`0x00000001030d31a4 (1 samples, 0.02%)</title><rect x="0.6314%" y="501" width="0.0234%" height="15" fill="rgb(222,56,46)" fg:x="27" fg:w="1"/><text x="0.8814%" y="511.50"></text></g><g><title>CoreAudio`0x00000001031410d4 (1 samples, 0.02%)</title><rect x="0.6314%" y="485" width="0.0234%" height="15" fill="rgb(239,76,54)" fg:x="27" fg:w="1"/><text x="0.8814%" y="495.50"></text></g><g><title>AudioToolboxCore`AudioComponentInstanceNew (7 samples, 0.16%)</title><rect x="0.5145%" y="613" width="0.1637%" height="15" fill="rgb(231,124,27)" fg:x="22" fg:w="7"/><text x="0.7645%" y="623.50"></text></g><g><title>AudioToolboxCore`Synchronously (6 samples, 0.14%)</title><rect x="0.5379%" y="597" width="0.1403%" height="15" fill="rgb(249,195,6)" fg:x="23" fg:w="6"/><text x="0.7879%" y="607.50"></text></g><g><title>AudioToolboxCore`__AudioComponentInstanceNew_block_invoke (6 samples, 0.14%)</title><rect x="0.5379%" y="581" width="0.1403%" height="15" fill="rgb(237,174,47)" fg:x="23" fg:w="6"/><text x="0.7879%" y="591.50"></text></g><g><title>AudioToolboxCore`instantiate(OpaqueAudioComponent*, unsigned int, bool, void (OpaqueAudioComponentInstance*, int) block_pointer) (6 samples, 0.14%)</title><rect x="0.5379%" y="565" width="0.1403%" height="15" fill="rgb(206,201,31)" fg:x="23" fg:w="6"/><text x="0.7879%" y="575.50"></text></g><g><title>AudioToolboxCore`APComponent::newInstance(unsigned int, bool, void  (6 samples, 0.14%)</title><rect x="0.5379%" y="549" width="0.1403%" height="15" fill="rgb(231,57,52)" fg:x="23" fg:w="6"/><text x="0.7879%" y="559.50"></text></g><g><title>CoreAudio`0x00000001031d28a4 (3 samples, 0.07%)</title><rect x="0.6080%" y="533" width="0.0702%" height="15" fill="rgb(248,177,22)" fg:x="26" fg:w="3"/><text x="0.8580%" y="543.50"></text></g><g><title>CoreAudio`0x00000001030d7a24 (3 samples, 0.07%)</title><rect x="0.6080%" y="517" width="0.0702%" height="15" fill="rgb(215,211,37)" fg:x="26" fg:w="3"/><text x="0.8580%" y="527.50"></text></g><g><title>CoreAudio`0x00000001031cdf78 (1 samples, 0.02%)</title><rect x="0.6548%" y="501" width="0.0234%" height="15" fill="rgb(241,128,51)" fg:x="28" fg:w="1"/><text x="0.9048%" y="511.50"></text></g><g><title>CoreAudio`0x00000001031cb2b4 (1 samples, 0.02%)</title><rect x="0.6548%" y="485" width="0.0234%" height="15" fill="rgb(227,165,31)" fg:x="28" fg:w="1"/><text x="0.9048%" y="495.50"></text></g><g><title>CoreAudio`0x00000001030cc740 (1 samples, 0.02%)</title><rect x="0.6548%" y="469" width="0.0234%" height="15" fill="rgb(228,167,24)" fg:x="28" fg:w="1"/><text x="0.9048%" y="479.50"></text></g><g><title>CoreAudio`0x00000001031cb1ec (1 samples, 0.02%)</title><rect x="0.6548%" y="453" width="0.0234%" height="15" fill="rgb(228,143,12)" fg:x="28" fg:w="1"/><text x="0.9048%" y="463.50"></text></g><g><title>AudioToolboxCore`AudioUnitInitialize (1 samples, 0.02%)</title><rect x="0.6782%" y="613" width="0.0234%" height="15" fill="rgb(249,149,8)" fg:x="29" fg:w="1"/><text x="0.9282%" y="623.50"></text></g><g><title>CoreAudio`0x00000001031d5384 (1 samples, 0.02%)</title><rect x="0.6782%" y="597" width="0.0234%" height="15" fill="rgb(243,35,44)" fg:x="29" fg:w="1"/><text x="0.9282%" y="607.50"></text></g><g><title>CoreAudio`0x00000001031d0c28 (1 samples, 0.02%)</title><rect x="0.6782%" y="581" width="0.0234%" height="15" fill="rgb(246,89,9)" fg:x="29" fg:w="1"/><text x="0.9282%" y="591.50"></text></g><g><title>CoreAudio`0x00000001030d0b9c (1 samples, 0.02%)</title><rect x="0.6782%" y="565" width="0.0234%" height="15" fill="rgb(233,213,13)" fg:x="29" fg:w="1"/><text x="0.9282%" y="575.50"></text></g><g><title>CoreAudio`0x00000001030cee80 (1 samples, 0.02%)</title><rect x="0.6782%" y="549" width="0.0234%" height="15" fill="rgb(233,141,41)" fg:x="29" fg:w="1"/><text x="0.9282%" y="559.50"></text></g><g><title>CoreAudio`0x00000001030cf7a4 (1 samples, 0.02%)</title><rect x="0.6782%" y="533" width="0.0234%" height="15" fill="rgb(239,167,4)" fg:x="29" fg:w="1"/><text x="0.9282%" y="543.50"></text></g><g><title>AudioToolboxCore`AudioConverterGetProperty (1 samples, 0.02%)</title><rect x="0.6782%" y="517" width="0.0234%" height="15" fill="rgb(209,217,16)" fg:x="29" fg:w="1"/><text x="0.9282%" y="527.50"></text></g><g><title>AudioToolboxCore`with_resolved(OpaqueAudioConverter*, caulk::function_ref&lt;int  (1 samples, 0.02%)</title><rect x="0.6782%" y="501" width="0.0234%" height="15" fill="rgb(219,88,35)" fg:x="29" fg:w="1"/><text x="0.9282%" y="511.50"></text></g><g><title>AudioToolboxCore`acv2::AudioConverterV2::getProperty (1 samples, 0.02%)</title><rect x="0.6782%" y="485" width="0.0234%" height="15" fill="rgb(220,193,23)" fg:x="29" fg:w="1"/><text x="0.9282%" y="495.50"></text></g><g><title>AudioToolboxCore`acv2::CBRConverter::GetProperty (1 samples, 0.02%)</title><rect x="0.6782%" y="469" width="0.0234%" height="15" fill="rgb(230,90,52)" fg:x="29" fg:w="1"/><text x="0.9282%" y="479.50"></text></g><g><title>AudioSession`-[AVAudioSession(CatalystPrivate) createSessionInServer] (1 samples, 0.02%)</title><rect x="0.7250%" y="389" width="0.0234%" height="15" fill="rgb(252,106,19)" fg:x="31" fg:w="1"/><text x="0.9750%" y="399.50"></text></g><g><title>CoreFoundation`_CF_forwarding_prep_0 (1 samples, 0.02%)</title><rect x="0.7250%" y="373" width="0.0234%" height="15" fill="rgb(206,74,20)" fg:x="31" fg:w="1"/><text x="0.9750%" y="383.50"></text></g><g><title>CoreFoundation`___forwarding___ (1 samples, 0.02%)</title><rect x="0.7250%" y="357" width="0.0234%" height="15" fill="rgb(230,138,44)" fg:x="31" fg:w="1"/><text x="0.9750%" y="367.50"></text></g><g><title>Foundation`-[NSXPCConnection _sendInvocation:orArguments:count:methodSignature:selector:withProxy:] (1 samples, 0.02%)</title><rect x="0.7250%" y="341" width="0.0234%" height="15" fill="rgb(235,182,43)" fg:x="31" fg:w="1"/><text x="0.9750%" y="351.50"></text></g><g><title>Foundation`__NSXPCCONNECTION_IS_WAITING_FOR_A_SYNCHRONOUS_REPLY__ (1 samples, 0.02%)</title><rect x="0.7250%" y="325" width="0.0234%" height="15" fill="rgb(242,16,51)" fg:x="31" fg:w="1"/><text x="0.9750%" y="335.50"></text></g><g><title>libxpc.dylib`xpc_connection_send_message_with_reply_sync (1 samples, 0.02%)</title><rect x="0.7250%" y="309" width="0.0234%" height="15" fill="rgb(248,9,4)" fg:x="31" fg:w="1"/><text x="0.9750%" y="319.50"></text></g><g><title>libdispatch.dylib`dispatch_mach_send_with_result_and_wait_for_reply (1 samples, 0.02%)</title><rect x="0.7250%" y="293" width="0.0234%" height="15" fill="rgb(210,31,22)" fg:x="31" fg:w="1"/><text x="0.9750%" y="303.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_and_wait_for_reply (1 samples, 0.02%)</title><rect x="0.7250%" y="277" width="0.0234%" height="15" fill="rgb(239,54,39)" fg:x="31" fg:w="1"/><text x="0.9750%" y="287.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_msg (1 samples, 0.02%)</title><rect x="0.7250%" y="261" width="0.0234%" height="15" fill="rgb(230,99,41)" fg:x="31" fg:w="1"/><text x="0.9750%" y="271.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_drain (1 samples, 0.02%)</title><rect x="0.7250%" y="245" width="0.0234%" height="15" fill="rgb(253,106,12)" fg:x="31" fg:w="1"/><text x="0.9750%" y="255.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_send (1 samples, 0.02%)</title><rect x="0.7250%" y="229" width="0.0234%" height="15" fill="rgb(213,46,41)" fg:x="31" fg:w="1"/><text x="0.9750%" y="239.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_send (1 samples, 0.02%)</title><rect x="0.7250%" y="213" width="0.0234%" height="15" fill="rgb(215,133,35)" fg:x="31" fg:w="1"/><text x="0.9750%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (1 samples, 0.02%)</title><rect x="0.7250%" y="197" width="0.0234%" height="15" fill="rgb(213,28,5)" fg:x="31" fg:w="1"/><text x="0.9750%" y="207.50"></text></g><g><title>libAudioStatistics.dylib`-[CAReporter setConfiguration:] (1 samples, 0.02%)</title><rect x="0.7484%" y="389" width="0.0234%" height="15" fill="rgb(215,77,49)" fg:x="32" fg:w="1"/><text x="0.9984%" y="399.50"></text></g><g><title>CoreFoundation`_CF_forwarding_prep_0 (1 samples, 0.02%)</title><rect x="0.7484%" y="373" width="0.0234%" height="15" fill="rgb(248,100,22)" fg:x="32" fg:w="1"/><text x="0.9984%" y="383.50"></text></g><g><title>CoreFoundation`___forwarding___ (1 samples, 0.02%)</title><rect x="0.7484%" y="357" width="0.0234%" height="15" fill="rgb(208,67,9)" fg:x="32" fg:w="1"/><text x="0.9984%" y="367.50"></text></g><g><title>Foundation`-[_NSXPCDistantObject _forwardStackInvocation:] (1 samples, 0.02%)</title><rect x="0.7484%" y="341" width="0.0234%" height="15" fill="rgb(219,133,21)" fg:x="32" fg:w="1"/><text x="0.9984%" y="351.50"></text></g><g><title>CoreFoundation`-[NSInvocation selector] (1 samples, 0.02%)</title><rect x="0.7484%" y="325" width="0.0234%" height="15" fill="rgb(246,46,29)" fg:x="32" fg:w="1"/><text x="0.9984%" y="335.50"></text></g><g><title>CoreFoundation`-[NSInvocation getArgument:atIndex:] (1 samples, 0.02%)</title><rect x="0.7484%" y="309" width="0.0234%" height="15" fill="rgb(246,185,52)" fg:x="32" fg:w="1"/><text x="0.9984%" y="319.50"></text></g><g><title>CoreFoundation`-[NSMethodSignature _argInfo:] (1 samples, 0.02%)</title><rect x="0.7484%" y="293" width="0.0234%" height="15" fill="rgb(252,136,11)" fg:x="32" fg:w="1"/><text x="0.9984%" y="303.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (1 samples, 0.02%)</title><rect x="0.7717%" y="389" width="0.0234%" height="15" fill="rgb(219,138,53)" fg:x="33" fg:w="1"/><text x="1.0217%" y="399.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (1 samples, 0.02%)</title><rect x="0.7717%" y="373" width="0.0234%" height="15" fill="rgb(211,51,23)" fg:x="33" fg:w="1"/><text x="1.0217%" y="383.50"></text></g><g><title>libobjc.A.dylib`realizeClassMaybeSwiftMaybeRelock(objc_class*, locker_mixin&lt;lockdebug::lock_mixin (1 samples, 0.02%)</title><rect x="0.7717%" y="357" width="0.0234%" height="15" fill="rgb(247,221,28)" fg:x="33" fg:w="1"/><text x="1.0217%" y="367.50"></text></g><g><title>libobjc.A.dylib`realizeClassWithoutSwift(objc_class*, objc_class*) (1 samples, 0.02%)</title><rect x="0.7717%" y="341" width="0.0234%" height="15" fill="rgb(251,222,45)" fg:x="33" fg:w="1"/><text x="1.0217%" y="351.50"></text></g><g><title>libobjc.A.dylib`prepareMethodLists(objc_class*, method_list_t**, int, bool, bool, char const*) (1 samples, 0.02%)</title><rect x="0.7717%" y="325" width="0.0234%" height="15" fill="rgb(217,162,53)" fg:x="33" fg:w="1"/><text x="1.0217%" y="335.50"></text></g><g><title>udp_latency_test`cpal::host::coreaudio::macos::Device::default_config (16 samples, 0.37%)</title><rect x="0.4443%" y="645" width="0.3742%" height="15" fill="rgb(229,93,14)" fg:x="19" fg:w="16"/><text x="0.6943%" y="655.50"></text></g><g><title>udp_latency_test`cpal::host::coreaudio::macos::audio_unit_from_device (16 samples, 0.37%)</title><rect x="0.4443%" y="629" width="0.3742%" height="15" fill="rgb(209,67,49)" fg:x="19" fg:w="16"/><text x="0.6943%" y="639.50"></text></g><g><title>AudioToolboxCore`AudioUnitSetProperty (5 samples, 0.12%)</title><rect x="0.7016%" y="613" width="0.1169%" height="15" fill="rgb(213,87,29)" fg:x="30" fg:w="5"/><text x="0.9516%" y="623.50"></text></g><g><title>CoreAudio`0x00000001031d42ac (5 samples, 0.12%)</title><rect x="0.7016%" y="597" width="0.1169%" height="15" fill="rgb(205,151,52)" fg:x="30" fg:w="5"/><text x="0.9516%" y="607.50"></text></g><g><title>CoreAudio`0x00000001031ce7c4 (5 samples, 0.12%)</title><rect x="0.7016%" y="581" width="0.1169%" height="15" fill="rgb(253,215,39)" fg:x="30" fg:w="5"/><text x="0.9516%" y="591.50"></text></g><g><title>CoreAudio`0x00000001030d4af4 (5 samples, 0.12%)</title><rect x="0.7016%" y="565" width="0.1169%" height="15" fill="rgb(221,220,41)" fg:x="30" fg:w="5"/><text x="0.9516%" y="575.50"></text></g><g><title>CoreAudio`0x00000001030cc8b8 (5 samples, 0.12%)</title><rect x="0.7016%" y="549" width="0.1169%" height="15" fill="rgb(218,133,21)" fg:x="30" fg:w="5"/><text x="0.9516%" y="559.50"></text></g><g><title>CoreAudio`AudioDeviceDestroyIOProcID_mac_imp (5 samples, 0.12%)</title><rect x="0.7016%" y="533" width="0.1169%" height="15" fill="rgb(221,193,43)" fg:x="30" fg:w="5"/><text x="0.9516%" y="543.50"></text></g><g><title>CoreAudio`HAL_HardwarePlugIn_DeviceDestroyIOProcID(AudioHardwarePlugInInterface**, unsigned int, int (*)(unsigned int, AudioTimeStamp const*, AudioBufferList const*, AudioTimeStamp const*, AudioBufferList*, AudioTimeStamp const*, void*)) (5 samples, 0.12%)</title><rect x="0.7016%" y="517" width="0.1169%" height="15" fill="rgb(240,128,52)" fg:x="30" fg:w="5"/><text x="0.9516%" y="527.50"></text></g><g><title>CoreAudio`HALC_ProxyIOContext::StopIOProc(int (*) (5 samples, 0.12%)</title><rect x="0.7016%" y="501" width="0.1169%" height="15" fill="rgb(253,114,12)" fg:x="30" fg:w="5"/><text x="0.9516%" y="511.50"></text></g><g><title>CoreAudio`HALC_ProxyIOContext::_SetPlayStateForSmartRouting(int (*) (5 samples, 0.12%)</title><rect x="0.7016%" y="485" width="0.1169%" height="15" fill="rgb(215,223,47)" fg:x="30" fg:w="5"/><text x="0.9516%" y="495.50"></text></g><g><title>AudioSession`+[AVAudioSession sharedInstance] (5 samples, 0.12%)</title><rect x="0.7016%" y="469" width="0.1169%" height="15" fill="rgb(248,225,23)" fg:x="30" fg:w="5"/><text x="0.9516%" y="479.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (4 samples, 0.09%)</title><rect x="0.7250%" y="453" width="0.0935%" height="15" fill="rgb(250,108,0)" fg:x="31" fg:w="4"/><text x="0.9750%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (4 samples, 0.09%)</title><rect x="0.7250%" y="437" width="0.0935%" height="15" fill="rgb(228,208,7)" fg:x="31" fg:w="4"/><text x="0.9750%" y="447.50"></text></g><g><title>AudioSession`__32+[AVAudioSession sharedInstance]_block_invoke (4 samples, 0.09%)</title><rect x="0.7250%" y="421" width="0.0935%" height="15" fill="rgb(244,45,10)" fg:x="31" fg:w="4"/><text x="0.9750%" y="431.50"></text></g><g><title>AudioSession`-[AVAudioSession(CatalystPrivate) initForMacOS] (4 samples, 0.09%)</title><rect x="0.7250%" y="405" width="0.0935%" height="15" fill="rgb(207,125,25)" fg:x="31" fg:w="4"/><text x="0.9750%" y="415.50"></text></g><g><title>libsystem_trace.dylib`_os_log_impl (1 samples, 0.02%)</title><rect x="0.7951%" y="389" width="0.0234%" height="15" fill="rgb(210,195,18)" fg:x="34" fg:w="1"/><text x="1.0451%" y="399.50"></text></g><g><title>libsystem_trace.dylib`_os_log (1 samples, 0.02%)</title><rect x="0.7951%" y="373" width="0.0234%" height="15" fill="rgb(249,80,12)" fg:x="34" fg:w="1"/><text x="1.0451%" y="383.50"></text></g><g><title>libsystem_trace.dylib`_os_log_impl_flatten_and_send (1 samples, 0.02%)</title><rect x="0.7951%" y="357" width="0.0234%" height="15" fill="rgb(221,65,9)" fg:x="34" fg:w="1"/><text x="1.0451%" y="367.50"></text></g><g><title>libsystem_trace.dylib`_os_log_fmt_flatten_to_blob (1 samples, 0.02%)</title><rect x="0.7951%" y="341" width="0.0234%" height="15" fill="rgb(235,49,36)" fg:x="34" fg:w="1"/><text x="1.0451%" y="351.50"></text></g><g><title>libsystem_trace.dylib`_os_log_fmt_flatten_data_into_blob (1 samples, 0.02%)</title><rect x="0.7951%" y="325" width="0.0234%" height="15" fill="rgb(225,32,20)" fg:x="34" fg:w="1"/><text x="1.0451%" y="335.50"></text></g><g><title>libsystem_trace.dylib`os_trace_blob_addns (1 samples, 0.02%)</title><rect x="0.7951%" y="309" width="0.0234%" height="15" fill="rgb(215,141,46)" fg:x="34" fg:w="1"/><text x="1.0451%" y="319.50"></text></g><g><title>udp_latency_test`std::io::stdio::_print (1 samples, 0.02%)</title><rect x="0.8185%" y="645" width="0.0234%" height="15" fill="rgb(250,160,47)" fg:x="35" fg:w="1"/><text x="1.0685%" y="655.50"></text></g><g><title>udp_latency_test`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.02%)</title><rect x="0.8185%" y="629" width="0.0234%" height="15" fill="rgb(216,222,40)" fg:x="35" fg:w="1"/><text x="1.0685%" y="639.50"></text></g><g><title>udp_latency_test`core::fmt::write (1 samples, 0.02%)</title><rect x="0.8185%" y="613" width="0.0234%" height="15" fill="rgb(234,217,39)" fg:x="35" fg:w="1"/><text x="1.0685%" y="623.50"></text></g><g><title>udp_latency_test`&lt;cpal::StreamConfig as core::fmt::Debug&gt;::fmt (1 samples, 0.02%)</title><rect x="0.8185%" y="597" width="0.0234%" height="15" fill="rgb(207,178,40)" fg:x="35" fg:w="1"/><text x="1.0685%" y="607.50"></text></g><g><title>udp_latency_test`core::fmt::Formatter::debug_struct_field3_finish (1 samples, 0.02%)</title><rect x="0.8185%" y="581" width="0.0234%" height="15" fill="rgb(221,136,13)" fg:x="35" fg:w="1"/><text x="1.0685%" y="591.50"></text></g><g><title>udp_latency_test`core::fmt::builders::DebugStruct::field (1 samples, 0.02%)</title><rect x="0.8185%" y="565" width="0.0234%" height="15" fill="rgb(249,199,10)" fg:x="35" fg:w="1"/><text x="1.0685%" y="575.50"></text></g><g><title>udp_latency_test`&lt;cpal::SampleRate as core::fmt::Debug&gt;::fmt (1 samples, 0.02%)</title><rect x="0.8185%" y="549" width="0.0234%" height="15" fill="rgb(249,222,13)" fg:x="35" fg:w="1"/><text x="1.0685%" y="559.50"></text></g><g><title>udp_latency_test`core::fmt::Formatter::debug_tuple_field1_finish (1 samples, 0.02%)</title><rect x="0.8185%" y="533" width="0.0234%" height="15" fill="rgb(244,185,38)" fg:x="35" fg:w="1"/><text x="1.0685%" y="543.50"></text></g><g><title>udp_latency_test`&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.02%)</title><rect x="0.8185%" y="517" width="0.0234%" height="15" fill="rgb(236,202,9)" fg:x="35" fg:w="1"/><text x="1.0685%" y="527.50"></text></g><g><title>udp_latency_test`webrtc_audio_processing::Processor::new (1 samples, 0.02%)</title><rect x="0.8419%" y="645" width="0.0234%" height="15" fill="rgb(250,229,37)" fg:x="36" fg:w="1"/><text x="1.0919%" y="655.50"></text></g><g><title>udp_latency_test`webrtc_audio_processing::audio_processing_create (1 samples, 0.02%)</title><rect x="0.8419%" y="629" width="0.0234%" height="15" fill="rgb(206,174,23)" fg:x="36" fg:w="1"/><text x="1.0919%" y="639.50"></text></g><g><title>udp_latency_test`webrtc::AudioProcessing::Create (1 samples, 0.02%)</title><rect x="0.8419%" y="613" width="0.0234%" height="15" fill="rgb(211,33,43)" fg:x="36" fg:w="1"/><text x="1.0919%" y="623.50"></text></g><g><title>udp_latency_test`webrtc::AudioProcessingImpl::Initialize (1 samples, 0.02%)</title><rect x="0.8419%" y="597" width="0.0234%" height="15" fill="rgb(245,58,50)" fg:x="36" fg:w="1"/><text x="1.0919%" y="607.50"></text></g><g><title>udp_latency_test`webrtc::AudioProcessingImpl::InitializeLocked (1 samples, 0.02%)</title><rect x="0.8419%" y="581" width="0.0234%" height="15" fill="rgb(244,68,36)" fg:x="36" fg:w="1"/><text x="1.0919%" y="591.50"></text></g><g><title>udp_latency_test`webrtc::AudioProcessingImpl::InitializeExperimentalAgc (1 samples, 0.02%)</title><rect x="0.8419%" y="565" width="0.0234%" height="15" fill="rgb(232,229,15)" fg:x="36" fg:w="1"/><text x="1.0919%" y="575.50"></text></g><g><title>udp_latency_test`webrtc::AgcManagerDirect::AgcManagerDirect (1 samples, 0.02%)</title><rect x="0.8419%" y="549" width="0.0234%" height="15" fill="rgb(254,30,23)" fg:x="36" fg:w="1"/><text x="1.0919%" y="559.50"></text></g><g><title>udp_latency_test`webrtc::Agc::Agc (1 samples, 0.02%)</title><rect x="0.8419%" y="533" width="0.0234%" height="15" fill="rgb(235,160,14)" fg:x="36" fg:w="1"/><text x="1.0919%" y="543.50"></text></g><g><title>udp_latency_test`webrtc::Resampler::Resampler (1 samples, 0.02%)</title><rect x="0.8419%" y="517" width="0.0234%" height="15" fill="rgb(212,155,44)" fg:x="36" fg:w="1"/><text x="1.0919%" y="527.50"></text></g><g><title>dyld`start (38 samples, 0.89%)</title><rect x="0.0000%" y="741" width="0.8887%" height="15" fill="rgb(226,2,50)" fg:x="0" fg:w="38"/><text x="0.2500%" y="751.50"></text></g><g><title>udp_latency_test`main (38 samples, 0.89%)</title><rect x="0.0000%" y="725" width="0.8887%" height="15" fill="rgb(234,177,6)" fg:x="0" fg:w="38"/><text x="0.2500%" y="735.50"></text></g><g><title>udp_latency_test`std::rt::lang_start_internal (38 samples, 0.89%)</title><rect x="0.0000%" y="709" width="0.8887%" height="15" fill="rgb(217,24,9)" fg:x="0" fg:w="38"/><text x="0.2500%" y="719.50"></text></g><g><title>udp_latency_test`std::rt::lang_start::_{{closure}} (38 samples, 0.89%)</title><rect x="0.0000%" y="693" width="0.8887%" height="15" fill="rgb(220,13,46)" fg:x="0" fg:w="38"/><text x="0.2500%" y="703.50"></text></g><g><title>udp_latency_test`std::sys::backtrace::__rust_begin_short_backtrace (38 samples, 0.89%)</title><rect x="0.0000%" y="677" width="0.8887%" height="15" fill="rgb(239,221,27)" fg:x="0" fg:w="38"/><text x="0.2500%" y="687.50"></text></g><g><title>udp_latency_test`udp_latency_test::main (38 samples, 0.89%)</title><rect x="0.0000%" y="661" width="0.8887%" height="15" fill="rgb(222,198,25)" fg:x="0" fg:w="38"/><text x="0.2500%" y="671.50"></text></g><g><title>udp_latency_test`webrtc_audio_processing::Processor::set_config (1 samples, 0.02%)</title><rect x="0.8653%" y="645" width="0.0234%" height="15" fill="rgb(211,99,13)" fg:x="37" fg:w="1"/><text x="1.1153%" y="655.50"></text></g><g><title>udp_latency_test`webrtc_audio_processing::set_config (1 samples, 0.02%)</title><rect x="0.8653%" y="629" width="0.0234%" height="15" fill="rgb(232,111,31)" fg:x="37" fg:w="1"/><text x="1.1153%" y="639.50"></text></g><g><title>udp_latency_test`webrtc::NoiseSuppressionImpl::Enable (1 samples, 0.02%)</title><rect x="0.8653%" y="613" width="0.0234%" height="15" fill="rgb(245,82,37)" fg:x="37" fg:w="1"/><text x="1.1153%" y="623.50"></text></g><g><title>udp_latency_test`webrtc::ProcessingComponent::EnableComponent (1 samples, 0.02%)</title><rect x="0.8653%" y="597" width="0.0234%" height="15" fill="rgb(227,149,46)" fg:x="37" fg:w="1"/><text x="1.1153%" y="607.50"></text></g><g><title>udp_latency_test`webrtc::ProcessingComponent::Initialize (1 samples, 0.02%)</title><rect x="0.8653%" y="581" width="0.0234%" height="15" fill="rgb(218,36,50)" fg:x="37" fg:w="1"/><text x="1.1153%" y="591.50"></text></g><g><title>udp_latency_test`WebRtcNs_Create (1 samples, 0.02%)</title><rect x="0.8653%" y="565" width="0.0234%" height="15" fill="rgb(226,80,48)" fg:x="37" fg:w="1"/><text x="1.1153%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="0.8653%" y="549" width="0.0234%" height="15" fill="rgb(238,224,15)" fg:x="37" fg:w="1"/><text x="1.1153%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.02%)</title><rect x="0.8653%" y="533" width="0.0234%" height="15" fill="rgb(241,136,10)" fg:x="37" fg:w="1"/><text x="1.1153%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_kevent_worker_thread (1 samples, 0.02%)</title><rect x="0.8887%" y="709" width="0.0234%" height="15" fill="rgb(208,32,45)" fg:x="38" fg:w="1"/><text x="1.1387%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_mgr_queue_drain (1 samples, 0.02%)</title><rect x="0.8887%" y="693" width="0.0234%" height="15" fill="rgb(207,135,9)" fg:x="38" fg:w="1"/><text x="1.1387%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (1 samples, 0.02%)</title><rect x="0.8887%" y="677" width="0.0234%" height="15" fill="rgb(206,86,44)" fg:x="38" fg:w="1"/><text x="1.1387%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (1 samples, 0.02%)</title><rect x="0.8887%" y="661" width="0.0234%" height="15" fill="rgb(245,177,15)" fg:x="38" fg:w="1"/><text x="1.1387%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_install (1 samples, 0.02%)</title><rect x="0.8887%" y="645" width="0.0234%" height="15" fill="rgb(206,64,50)" fg:x="38" fg:w="1"/><text x="1.1387%" y="655.50"></text></g><g><title>libdispatch.dylib`_dispatch_unote_register_muxed (1 samples, 0.02%)</title><rect x="0.8887%" y="629" width="0.0234%" height="15" fill="rgb(234,36,40)" fg:x="38" fg:w="1"/><text x="1.1387%" y="639.50"></text></g><g><title>libdispatch.dylib`_dispatch_kevent_mach_notify_resume (1 samples, 0.02%)</title><rect x="0.8887%" y="613" width="0.0234%" height="15" fill="rgb(213,64,8)" fg:x="38" fg:w="1"/><text x="1.1387%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_request_notification_trap (1 samples, 0.02%)</title><rect x="0.8887%" y="597" width="0.0234%" height="15" fill="rgb(210,75,36)" fg:x="38" fg:w="1"/><text x="1.1387%" y="607.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (2 samples, 0.05%)</title><rect x="0.8887%" y="741" width="0.0468%" height="15" fill="rgb(229,88,21)" fg:x="38" fg:w="2"/><text x="1.1387%" y="751.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (2 samples, 0.05%)</title><rect x="0.8887%" y="725" width="0.0468%" height="15" fill="rgb(252,204,47)" fg:x="38" fg:w="2"/><text x="1.1387%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (1 samples, 0.02%)</title><rect x="0.9121%" y="709" width="0.0234%" height="15" fill="rgb(208,77,27)" fg:x="39" fg:w="1"/><text x="1.1621%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_drain_deferred_wlh (1 samples, 0.02%)</title><rect x="0.9121%" y="693" width="0.0234%" height="15" fill="rgb(221,76,26)" fg:x="39" fg:w="1"/><text x="1.1621%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_workloop_invoke (1 samples, 0.02%)</title><rect x="0.9121%" y="677" width="0.0234%" height="15" fill="rgb(225,139,18)" fg:x="39" fg:w="1"/><text x="1.1621%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (1 samples, 0.02%)</title><rect x="0.9121%" y="661" width="0.0234%" height="15" fill="rgb(230,137,11)" fg:x="39" fg:w="1"/><text x="1.1621%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (1 samples, 0.02%)</title><rect x="0.9121%" y="645" width="0.0234%" height="15" fill="rgb(212,28,1)" fg:x="39" fg:w="1"/><text x="1.1621%" y="655.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.02%)</title><rect x="0.9121%" y="629" width="0.0234%" height="15" fill="rgb(248,164,17)" fg:x="39" fg:w="1"/><text x="1.1621%" y="639.50"></text></g><g><title>CoreAudio`void applesauce::dispatch::v1::async&lt;HALC_ShellObject::PropertiesChanged(unsigned int, unsigned int, AudioObjectPropertyAddress const*, bool) const::$_0&amp;&gt;(NSObject&lt;OS_dispatch_queue&gt;*, HALC_ShellObject::PropertiesChanged(unsigned int, unsigned int, AudioObjectPropertyAddress const*, bool) const::$_0&amp;)::&apos;lambda&apos;(void*)::__invoke (1 samples, 0.02%)</title><rect x="0.9121%" y="613" width="0.0234%" height="15" fill="rgb(222,171,42)" fg:x="39" fg:w="1"/><text x="1.1621%" y="623.50"></text></g><g><title>CoreAudio`HALSystem::AudioObjectPropertiesChanged (1 samples, 0.02%)</title><rect x="0.9121%" y="597" width="0.0234%" height="15" fill="rgb(243,84,45)" fg:x="39" fg:w="1"/><text x="1.1621%" y="607.50"></text></g><g><title>CoreAudio`HALObject::PropertiesChanged (1 samples, 0.02%)</title><rect x="0.9121%" y="581" width="0.0234%" height="15" fill="rgb(252,49,23)" fg:x="39" fg:w="1"/><text x="1.1621%" y="591.50"></text></g><g><title>CoreAudio`0x00000001030d8c8c (1 samples, 0.02%)</title><rect x="0.9121%" y="565" width="0.0234%" height="15" fill="rgb(215,19,7)" fg:x="39" fg:w="1"/><text x="1.1621%" y="575.50"></text></g><g><title>CoreAudio`0x00000001030cee80 (1 samples, 0.02%)</title><rect x="0.9121%" y="549" width="0.0234%" height="15" fill="rgb(238,81,41)" fg:x="39" fg:w="1"/><text x="1.1621%" y="559.50"></text></g><g><title>CoreAudio`0x00000001030cfd48 (1 samples, 0.02%)</title><rect x="0.9121%" y="533" width="0.0234%" height="15" fill="rgb(210,199,37)" fg:x="39" fg:w="1"/><text x="1.1621%" y="543.50"></text></g><g><title>CoreAudio`0x00000001030cfda0 (1 samples, 0.02%)</title><rect x="0.9121%" y="517" width="0.0234%" height="15" fill="rgb(244,192,49)" fg:x="39" fg:w="1"/><text x="1.1621%" y="527.50"></text></g><g><title>CoreAudio`AudioObjectGetPropertyDataSize_mac_imp (1 samples, 0.02%)</title><rect x="0.9121%" y="501" width="0.0234%" height="15" fill="rgb(226,211,11)" fg:x="39" fg:w="1"/><text x="1.1621%" y="511.50"></text></g><g><title>CoreAudio`HALPlugIn::ObjectHasProperty (1 samples, 0.02%)</title><rect x="0.9121%" y="485" width="0.0234%" height="15" fill="rgb(236,162,54)" fg:x="39" fg:w="1"/><text x="1.1621%" y="495.50"></text></g><g><title>CoreAudio`HAL_HardwarePlugIn_ObjectHasProperty(AudioHardwarePlugInInterface**, unsigned int, AudioObjectPropertyAddress const*) (1 samples, 0.02%)</title><rect x="0.9121%" y="469" width="0.0234%" height="15" fill="rgb(220,229,9)" fg:x="39" fg:w="1"/><text x="1.1621%" y="479.50"></text></g><g><title>CoreAudio`HALC_ShellObject::HasProperty (1 samples, 0.02%)</title><rect x="0.9121%" y="453" width="0.0234%" height="15" fill="rgb(250,87,22)" fg:x="39" fg:w="1"/><text x="1.1621%" y="463.50"></text></g><g><title>CoreAudio`HALC_ProxyObject::HasProperty (1 samples, 0.02%)</title><rect x="0.9121%" y="437" width="0.0234%" height="15" fill="rgb(239,43,17)" fg:x="39" fg:w="1"/><text x="1.1621%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (1 samples, 0.02%)</title><rect x="0.9121%" y="421" width="0.0234%" height="15" fill="rgb(231,177,25)" fg:x="39" fg:w="1"/><text x="1.1621%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (1 samples, 0.02%)</title><rect x="0.9121%" y="405" width="0.0234%" height="15" fill="rgb(219,179,1)" fg:x="39" fg:w="1"/><text x="1.1621%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (1 samples, 0.02%)</title><rect x="0.9121%" y="389" width="0.0234%" height="15" fill="rgb(238,219,53)" fg:x="39" fg:w="1"/><text x="1.1621%" y="399.50"></text></g><g><title>CoreAudio`DYLD-STUB$$kdebug_trace (1 samples, 0.02%)</title><rect x="0.9355%" y="677" width="0.0234%" height="15" fill="rgb(232,167,36)" fg:x="40" fg:w="1"/><text x="1.1855%" y="687.50"></text></g><g><title>AudioToolboxCore`Resampler2::GetNumberOfSourceFrames (1 samples, 0.02%)</title><rect x="1.0524%" y="485" width="0.0234%" height="15" fill="rgb(244,19,51)" fg:x="45" fg:w="1"/><text x="1.3024%" y="495.50"></text></g><g><title>AudioToolboxCore`Resampler2::PushConvert (5 samples, 0.12%)</title><rect x="1.0758%" y="485" width="0.1169%" height="15" fill="rgb(224,6,22)" fg:x="46" fg:w="5"/><text x="1.3258%" y="495.50"></text></g><g><title>AudioToolboxCore`Resampler2::ConvertSIMD_SmallIntegerRatio (5 samples, 0.12%)</title><rect x="1.0758%" y="469" width="0.1169%" height="15" fill="rgb(224,145,5)" fg:x="46" fg:w="5"/><text x="1.3258%" y="479.50"></text></g><g><title>AudioToolboxCore`MonoMultiCoefsSRC_Neon (5 samples, 0.12%)</title><rect x="1.0758%" y="453" width="0.1169%" height="15" fill="rgb(234,130,49)" fg:x="46" fg:w="5"/><text x="1.3258%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="1.2161%" y="389" width="0.0234%" height="15" fill="rgb(254,6,2)" fg:x="52" fg:w="1"/><text x="1.4661%" y="399.50"></text></g><g><title>udp_latency_test`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (8 samples, 0.19%)</title><rect x="1.2395%" y="325" width="0.1871%" height="15" fill="rgb(208,96,46)" fg:x="53" fg:w="8"/><text x="1.4895%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`write (8 samples, 0.19%)</title><rect x="1.2395%" y="309" width="0.1871%" height="15" fill="rgb(239,3,39)" fg:x="53" fg:w="8"/><text x="1.4895%" y="319.50"></text></g><g><title>udp_latency_test`std::io::stdio::_print (9 samples, 0.21%)</title><rect x="1.2395%" y="389" width="0.2105%" height="15" fill="rgb(233,210,1)" fg:x="53" fg:w="9"/><text x="1.4895%" y="399.50"></text></g><g><title>udp_latency_test`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (9 samples, 0.21%)</title><rect x="1.2395%" y="373" width="0.2105%" height="15" fill="rgb(244,137,37)" fg:x="53" fg:w="9"/><text x="1.4895%" y="383.50"></text></g><g><title>udp_latency_test`core::fmt::write (9 samples, 0.21%)</title><rect x="1.2395%" y="357" width="0.2105%" height="15" fill="rgb(240,136,2)" fg:x="53" fg:w="9"/><text x="1.4895%" y="367.50"></text></g><g><title>udp_latency_test`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (9 samples, 0.21%)</title><rect x="1.2395%" y="341" width="0.2105%" height="15" fill="rgb(239,18,37)" fg:x="53" fg:w="9"/><text x="1.4895%" y="351.50"></text></g><g><title>udp_latency_test`core::slice::memchr::memrchr (1 samples, 0.02%)</title><rect x="1.4266%" y="325" width="0.0234%" height="15" fill="rgb(218,185,22)" fg:x="61" fg:w="1"/><text x="1.6766%" y="335.50"></text></g><g><title>AudioToolboxCore`acv2::AudioConverterChain::ProduceOutput(caulk::function_ref&lt;caulk::expected&lt;unsigned int, int&gt;  (18 samples, 0.42%)</title><rect x="1.0524%" y="565" width="0.4210%" height="15" fill="rgb(225,218,4)" fg:x="45" fg:w="18"/><text x="1.3024%" y="575.50"></text></g><g><title>AudioToolboxCore`acv2::CBRConverter::ProduceOutput (18 samples, 0.42%)</title><rect x="1.0524%" y="549" width="0.4210%" height="15" fill="rgb(230,182,32)" fg:x="45" fg:w="18"/><text x="1.3024%" y="559.50"></text></g><g><title>AudioToolboxCore`acv2::AudioConverterChain::ObtainInput (18 samples, 0.42%)</title><rect x="1.0524%" y="533" width="0.4210%" height="15" fill="rgb(242,56,43)" fg:x="45" fg:w="18"/><text x="1.3024%" y="543.50"></text></g><g><title>AudioToolboxCore`acv2::SampleRateConverter::ProduceOutput (18 samples, 0.42%)</title><rect x="1.0524%" y="517" width="0.4210%" height="15" fill="rgb(233,99,24)" fg:x="45" fg:w="18"/><text x="1.3024%" y="527.50"></text></g><g><title>AudioToolboxCore`acv2::Resampler2Wrapper::ProduceOutput (18 samples, 0.42%)</title><rect x="1.0524%" y="501" width="0.4210%" height="15" fill="rgb(234,209,42)" fg:x="45" fg:w="18"/><text x="1.3024%" y="511.50"></text></g><g><title>AudioToolboxCore`acv2::AudioConverterChain::ObtainInput (12 samples, 0.28%)</title><rect x="1.1927%" y="485" width="0.2806%" height="15" fill="rgb(227,7,12)" fg:x="51" fg:w="12"/><text x="1.4427%" y="495.50"></text></g><g><title>AudioToolboxCore`caulk::expected&lt;unsigned int, int&gt; caulk::function_ref&lt;caulk::expected&lt;unsigned int, int&gt; (ACAudioSpan&amp;)&gt;::functor_invoker&lt;acv2::AudioConverterV2::fillComplexBuffer(int (*)(OpaqueAudioConverter*, unsigned int*, AudioBufferList*, AudioStreamPacketDescription**, void*), void*, unsigned int*, AudioBufferList*, AudioStreamPacketDescription*, AudioStreamPacketDependencyInfo*)::$_2&gt;(caulk::details::erased_callable&lt;caulk::expected&lt;unsigned int, int&gt;  (12 samples, 0.28%)</title><rect x="1.1927%" y="469" width="0.2806%" height="15" fill="rgb(245,203,43)" fg:x="51" fg:w="12"/><text x="1.4427%" y="479.50"></text></g><g><title>CoreAudio`0x00000001030d25f4 (12 samples, 0.28%)</title><rect x="1.1927%" y="453" width="0.2806%" height="15" fill="rgb(238,205,33)" fg:x="51" fg:w="12"/><text x="1.4427%" y="463.50"></text></g><g><title>CoreAudio`0x00000001031cbc58 (12 samples, 0.28%)</title><rect x="1.1927%" y="437" width="0.2806%" height="15" fill="rgb(231,56,7)" fg:x="51" fg:w="12"/><text x="1.4427%" y="447.50"></text></g><g><title>udp_latency_test`coreaudio::audio_unit::render_callback::input_proc (12 samples, 0.28%)</title><rect x="1.1927%" y="421" width="0.2806%" height="15" fill="rgb(244,186,29)" fg:x="51" fg:w="12"/><text x="1.4427%" y="431.50"></text></g><g><title>udp_latency_test`coreaudio::audio_unit::render_callback::_&lt;impl coreaudio::audio_unit::AudioUnit&gt;::set_render_callback::_{{closure}} (12 samples, 0.28%)</title><rect x="1.1927%" y="405" width="0.2806%" height="15" fill="rgb(234,111,31)" fg:x="51" fg:w="12"/><text x="1.4427%" y="415.50"></text></g><g><title>udp_latency_test`std::io::stdio::print_to_buffer_if_capture_used (1 samples, 0.02%)</title><rect x="1.4500%" y="389" width="0.0234%" height="15" fill="rgb(241,149,10)" fg:x="62" fg:w="1"/><text x="1.7000%" y="399.50"></text></g><g><title>CoreAudio`0x00000001030d1d7c (19 samples, 0.44%)</title><rect x="1.0524%" y="629" width="0.4443%" height="15" fill="rgb(249,206,44)" fg:x="45" fg:w="19"/><text x="1.3024%" y="639.50"></text></g><g><title>AudioToolboxCore`AudioConverterFillComplexBuffer (19 samples, 0.44%)</title><rect x="1.0524%" y="613" width="0.4443%" height="15" fill="rgb(251,153,30)" fg:x="45" fg:w="19"/><text x="1.3024%" y="623.50"></text></g><g><title>AudioToolboxCore`with_resolved(OpaqueAudioConverter*, caulk::function_ref&lt;int  (19 samples, 0.44%)</title><rect x="1.0524%" y="597" width="0.4443%" height="15" fill="rgb(239,152,38)" fg:x="45" fg:w="19"/><text x="1.3024%" y="607.50"></text></g><g><title>AudioToolboxCore`acv2::AudioConverterV2::fillComplexBuffer(int (*) (19 samples, 0.44%)</title><rect x="1.0524%" y="581" width="0.4443%" height="15" fill="rgb(249,139,47)" fg:x="45" fg:w="19"/><text x="1.3024%" y="591.50"></text></g><g><title>AudioToolboxCore`acv2::CBRConverter::ProduceOutput (1 samples, 0.02%)</title><rect x="1.4733%" y="565" width="0.0234%" height="15" fill="rgb(244,64,35)" fg:x="63" fg:w="1"/><text x="1.7233%" y="575.50"></text></g><g><title>CoreAudio`0x00000001031d12ec (21 samples, 0.49%)</title><rect x="1.0290%" y="645" width="0.4911%" height="15" fill="rgb(216,46,15)" fg:x="44" fg:w="21"/><text x="1.2790%" y="655.50"></text></g><g><title>CoreAudio`0x0000000103154730 (1 samples, 0.02%)</title><rect x="1.4967%" y="629" width="0.0234%" height="15" fill="rgb(250,74,19)" fg:x="64" fg:w="1"/><text x="1.7467%" y="639.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="1.5201%" y="645" width="0.0234%" height="15" fill="rgb(249,42,33)" fg:x="65" fg:w="1"/><text x="1.7701%" y="655.50"></text></g><g><title>udp_latency_test`coreaudio::audio_unit::render_callback::_&lt;impl coreaudio::audio_unit::AudioUnit&gt;::set_input_callback::_{{closure}} (1 samples, 0.02%)</title><rect x="1.5435%" y="645" width="0.0234%" height="15" fill="rgb(242,149,17)" fg:x="66" fg:w="1"/><text x="1.7935%" y="655.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="1.5669%" y="629" width="0.0234%" height="15" fill="rgb(244,29,21)" fg:x="67" fg:w="1"/><text x="1.8169%" y="639.50"></text></g><g><title>AudioToolboxCore`AudioUnitRender (1 samples, 0.02%)</title><rect x="1.5903%" y="613" width="0.0234%" height="15" fill="rgb(220,130,37)" fg:x="68" fg:w="1"/><text x="1.8403%" y="623.50"></text></g><g><title>AudioToolboxCore`APComponentInstance::FromAudioComponentInstance (1 samples, 0.02%)</title><rect x="1.5903%" y="597" width="0.0234%" height="15" fill="rgb(211,67,2)" fg:x="68" fg:w="1"/><text x="1.8403%" y="607.50"></text></g><g><title>AudioToolboxCore`ResolvedOpaqueRef&lt;APComponentOrInstance_Opaque&gt;::ResolvedOpaqueRef (1 samples, 0.02%)</title><rect x="1.5903%" y="581" width="0.0234%" height="15" fill="rgb(235,68,52)" fg:x="68" fg:w="1"/><text x="1.8403%" y="591.50"></text></g><g><title>AudioToolboxCore`caulk::concurrent::guarded_lookup_hash_table&lt;unsigned int, BaseOpaqueObject*, (caulk::concurrent::guarded_lookup_hash_table_options)0, std::__1::function&lt;unsigned int (unsigned int)&gt;&gt;::scoped_lookup&amp; std::__1::optional&lt;caulk::concurrent::guarded_lookup_hash_table&lt;unsigned int, BaseOpaqueObject*, (caulk::concurrent::guarded_lookup_hash_table_options)0, std::__1::function&lt;unsigned int (unsigned int)&gt;&gt;::scoped_lookup&gt;::emplace[abi:ue170006]&lt;caulk::concurrent::guarded_lookup_hash_table&lt;unsigned int, BaseOpaqueObject*, (caulk::concurrent::guarded_lookup_hash_table_options)0, std::__1::function&lt;unsigned int (unsigned int)&gt;&gt;&amp;, unsigned int const&amp;, void&gt;(caulk::concurrent::guarded_lookup_hash_table&lt;unsigned int, BaseOpaqueObject*, (caulk::concurrent::guarded_lookup_hash_table_options)0, std::__1::function&lt;unsigned int  (1 samples, 0.02%)</title><rect x="1.5903%" y="565" width="0.0234%" height="15" fill="rgb(246,142,3)" fg:x="68" fg:w="1"/><text x="1.8403%" y="575.50"></text></g><g><title>AudioToolboxCore`caulk::concurrent::guarded_lookup_hash_table&lt;unsigned int, BaseOpaqueObject*, (caulk::concurrent::guarded_lookup_hash_table_options)0, std::__1::function&lt;unsigned int (unsigned int)&gt;&gt;::scoped_lookup::scoped_lookup(caulk::concurrent::guarded_lookup_hash_table&lt;unsigned int, BaseOpaqueObject*, (caulk::concurrent::guarded_lookup_hash_table_options)0, std::__1::function&lt;unsigned int  (1 samples, 0.02%)</title><rect x="1.5903%" y="549" width="0.0234%" height="15" fill="rgb(241,25,7)" fg:x="68" fg:w="1"/><text x="1.8403%" y="559.50"></text></g><g><title>AudioToolboxCore`caulk::concurrent::guarded_lookup_hash_table&lt;unsigned int, BaseOpaqueObject*, (caulk::concurrent::guarded_lookup_hash_table_options)0, std::__1::function&lt;unsigned int (unsigned int)&gt;&gt;::table_impl::findSlotForKey (1 samples, 0.02%)</title><rect x="1.5903%" y="533" width="0.0234%" height="15" fill="rgb(242,119,39)" fg:x="68" fg:w="1"/><text x="1.8403%" y="543.50"></text></g><g><title>AudioToolboxCore`std::__1::function&lt;unsigned int (unsigned int)&gt;::operator() (1 samples, 0.02%)</title><rect x="1.5903%" y="517" width="0.0234%" height="15" fill="rgb(241,98,45)" fg:x="68" fg:w="1"/><text x="1.8403%" y="527.50"></text></g><g><title>udp_latency_test`std::sync::mpmc::waker::SyncWaker::notify (2 samples, 0.05%)</title><rect x="1.6370%" y="581" width="0.0468%" height="15" fill="rgb(254,28,30)" fg:x="70" fg:w="2"/><text x="1.8870%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_signal_slow (2 samples, 0.05%)</title><rect x="1.6370%" y="565" width="0.0468%" height="15" fill="rgb(241,142,54)" fg:x="70" fg:w="2"/><text x="1.8870%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_signal_trap (2 samples, 0.05%)</title><rect x="1.6370%" y="549" width="0.0468%" height="15" fill="rgb(222,85,15)" fg:x="70" fg:w="2"/><text x="1.8870%" y="559.50"></text></g><g><title>udp_latency_test`coreaudio::audio_unit::render_callback::_&lt;impl coreaudio::audio_unit::AudioUnit&gt;::set_input_callback::_{{closure}} (5 samples, 0.12%)</title><rect x="1.5903%" y="629" width="0.1169%" height="15" fill="rgb(210,85,47)" fg:x="68" fg:w="5"/><text x="1.8403%" y="639.50"></text></g><g><title>udp_latency_test`std::sync::mpmc::Sender&lt;T&gt;::send (4 samples, 0.09%)</title><rect x="1.6137%" y="613" width="0.0935%" height="15" fill="rgb(224,206,25)" fg:x="69" fg:w="4"/><text x="1.8637%" y="623.50"></text></g><g><title>udp_latency_test`std::sync::mpmc::array::Channel&lt;T&gt;::send (3 samples, 0.07%)</title><rect x="1.6370%" y="597" width="0.0702%" height="15" fill="rgb(243,201,19)" fg:x="70" fg:w="3"/><text x="1.8870%" y="607.50"></text></g><g><title>udp_latency_test`std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::initialize (1 samples, 0.02%)</title><rect x="1.6838%" y="581" width="0.0234%" height="15" fill="rgb(236,59,4)" fg:x="72" fg:w="1"/><text x="1.9338%" y="591.50"></text></g><g><title>udp_latency_test`std::sync::mpmc::context::Context::new (1 samples, 0.02%)</title><rect x="1.6838%" y="565" width="0.0234%" height="15" fill="rgb(254,179,45)" fg:x="72" fg:w="1"/><text x="1.9338%" y="575.50"></text></g><g><title>udp_latency_test`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.02%)</title><rect x="1.6838%" y="549" width="0.0234%" height="15" fill="rgb(226,14,10)" fg:x="72" fg:w="1"/><text x="1.9338%" y="559.50"></text></g><g><title>CoreAudio`0x00000001030d5d68 (31 samples, 0.72%)</title><rect x="1.0056%" y="661" width="0.7250%" height="15" fill="rgb(244,27,41)" fg:x="43" fg:w="31"/><text x="1.2556%" y="671.50"></text></g><g><title>udp_latency_test`coreaudio::audio_unit::render_callback::input_proc (7 samples, 0.16%)</title><rect x="1.5669%" y="645" width="0.1637%" height="15" fill="rgb(235,35,32)" fg:x="67" fg:w="7"/><text x="1.8169%" y="655.50"></text></g><g><title>udp_latency_test`cpal::host::coreaudio::host_time_to_stream_instant (1 samples, 0.02%)</title><rect x="1.7072%" y="629" width="0.0234%" height="15" fill="rgb(218,68,31)" fg:x="73" fg:w="1"/><text x="1.9572%" y="639.50"></text></g><g><title>CoreAudio`HALB_MachPort::SendSimpleMessageWithSimpleReply (11 samples, 0.26%)</title><rect x="1.7306%" y="661" width="0.2572%" height="15" fill="rgb(207,120,37)" fg:x="74" fg:w="11"/><text x="1.9806%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (10 samples, 0.23%)</title><rect x="1.7540%" y="645" width="0.2339%" height="15" fill="rgb(227,98,0)" fg:x="75" fg:w="10"/><text x="2.0040%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (10 samples, 0.23%)</title><rect x="1.7540%" y="629" width="0.2339%" height="15" fill="rgb(207,7,3)" fg:x="75" fg:w="10"/><text x="2.0040%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (10 samples, 0.23%)</title><rect x="1.7540%" y="613" width="0.2339%" height="15" fill="rgb(206,98,19)" fg:x="75" fg:w="10"/><text x="2.0040%" y="623.50"></text></g><g><title>CoreAudio`HALB_Mutex::Lock (1 samples, 0.02%)</title><rect x="1.9878%" y="661" width="0.0234%" height="15" fill="rgb(217,5,26)" fg:x="85" fg:w="1"/><text x="2.2378%" y="671.50"></text></g><g><title>CoreAudio`HALC_ProxyIOContext::IOWorkLoop (46 samples, 1.08%)</title><rect x="0.9588%" y="677" width="1.0758%" height="15" fill="rgb(235,190,38)" fg:x="41" fg:w="46"/><text x="1.2088%" y="687.50"></text></g><g><title>CoreAudio`HALC_ProxyIOContext::AllocateWorkgroup (1 samples, 0.02%)</title><rect x="2.0112%" y="661" width="0.0234%" height="15" fill="rgb(247,86,24)" fg:x="86" fg:w="1"/><text x="2.2612%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (1 samples, 0.02%)</title><rect x="2.0112%" y="645" width="0.0234%" height="15" fill="rgb(205,101,16)" fg:x="86" fg:w="1"/><text x="2.2612%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (1 samples, 0.02%)</title><rect x="2.0112%" y="629" width="0.0234%" height="15" fill="rgb(246,168,33)" fg:x="86" fg:w="1"/><text x="2.2612%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (1 samples, 0.02%)</title><rect x="2.0112%" y="613" width="0.0234%" height="15" fill="rgb(231,114,1)" fg:x="86" fg:w="1"/><text x="2.2612%" y="623.50"></text></g><g><title>CoreAudio`HALC_IOThread::Entry (48 samples, 1.12%)</title><rect x="0.9355%" y="709" width="1.1225%" height="15" fill="rgb(207,184,53)" fg:x="40" fg:w="48"/><text x="1.1855%" y="719.50"></text></g><g><title>CoreAudio`invocation function for block in HALC_ProxyIOContext::HALC_ProxyIOContext (48 samples, 1.12%)</title><rect x="0.9355%" y="693" width="1.1225%" height="15" fill="rgb(224,95,51)" fg:x="40" fg:w="48"/><text x="1.1855%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="2.0346%" y="677" width="0.0234%" height="15" fill="rgb(212,188,45)" fg:x="87" fg:w="1"/><text x="2.2846%" y="687.50"></text></g><g><title>udp_latency_test`opus::Decoder::decode_float (1 samples, 0.02%)</title><rect x="2.0580%" y="677" width="0.0234%" height="15" fill="rgb(223,154,38)" fg:x="88" fg:w="1"/><text x="2.3080%" y="687.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="97.3340%" y="661" width="0.0234%" height="15" fill="rgb(251,22,52)" fg:x="4162" fg:w="1"/><text x="97.5840%" y="671.50"></text></g><g><title>udp_latency_test`celt_synthesis (3 samples, 0.07%)</title><rect x="97.4041%" y="581" width="0.0702%" height="15" fill="rgb(229,209,22)" fg:x="4165" fg:w="3"/><text x="97.6541%" y="591.50"></text></g><g><title>udp_latency_test`clt_mdct_backward_c (2 samples, 0.05%)</title><rect x="97.4275%" y="565" width="0.0468%" height="15" fill="rgb(234,138,34)" fg:x="4166" fg:w="2"/><text x="97.6775%" y="575.50"></text></g><g><title>udp_latency_test`opus_fft_impl (1 samples, 0.02%)</title><rect x="97.4509%" y="549" width="0.0234%" height="15" fill="rgb(212,95,11)" fg:x="4167" fg:w="1"/><text x="97.7009%" y="559.50"></text></g><g><title>udp_latency_test`deemphasis (1 samples, 0.02%)</title><rect x="97.4743%" y="581" width="0.0234%" height="15" fill="rgb(240,179,47)" fg:x="4168" fg:w="1"/><text x="97.7243%" y="591.50"></text></g><g><title>udp_latency_test`compute_theta (1 samples, 0.02%)</title><rect x="97.4977%" y="533" width="0.0234%" height="15" fill="rgb(240,163,11)" fg:x="4169" fg:w="1"/><text x="97.7477%" y="543.50"></text></g><g><title>udp_latency_test`ec_dec_update (1 samples, 0.02%)</title><rect x="97.5210%" y="517" width="0.0234%" height="15" fill="rgb(236,37,12)" fg:x="4170" fg:w="1"/><text x="97.7710%" y="527.50"></text></g><g><title>udp_latency_test`quant_all_bands (3 samples, 0.07%)</title><rect x="97.4977%" y="581" width="0.0702%" height="15" fill="rgb(232,164,16)" fg:x="4169" fg:w="3"/><text x="97.7477%" y="591.50"></text></g><g><title>udp_latency_test`quant_band (3 samples, 0.07%)</title><rect x="97.4977%" y="565" width="0.0702%" height="15" fill="rgb(244,205,15)" fg:x="4169" fg:w="3"/><text x="97.7477%" y="575.50"></text></g><g><title>udp_latency_test`quant_partition (3 samples, 0.07%)</title><rect x="97.4977%" y="549" width="0.0702%" height="15" fill="rgb(223,117,47)" fg:x="4169" fg:w="3"/><text x="97.7477%" y="559.50"></text></g><g><title>udp_latency_test`quant_partition (2 samples, 0.05%)</title><rect x="97.5210%" y="533" width="0.0468%" height="15" fill="rgb(244,107,35)" fg:x="4170" fg:w="2"/><text x="97.7710%" y="543.50"></text></g><g><title>udp_latency_test`quant_partition (1 samples, 0.02%)</title><rect x="97.5444%" y="517" width="0.0234%" height="15" fill="rgb(205,140,8)" fg:x="4171" fg:w="1"/><text x="97.7944%" y="527.50"></text></g><g><title>udp_latency_test`alg_unquant (1 samples, 0.02%)</title><rect x="97.5444%" y="501" width="0.0234%" height="15" fill="rgb(228,84,46)" fg:x="4171" fg:w="1"/><text x="97.7944%" y="511.50"></text></g><g><title>udp_latency_test`decode_pulses (1 samples, 0.02%)</title><rect x="97.5444%" y="485" width="0.0234%" height="15" fill="rgb(254,188,9)" fg:x="4171" fg:w="1"/><text x="97.7944%" y="495.50"></text></g><g><title>udp_latency_test`celt_decode_with_ec (8 samples, 0.19%)</title><rect x="97.4041%" y="597" width="0.1871%" height="15" fill="rgb(206,112,54)" fg:x="4165" fg:w="8"/><text x="97.6541%" y="607.50"></text></g><g><title>udp_latency_test`unquant_coarse_energy (1 samples, 0.02%)</title><rect x="97.5678%" y="581" width="0.0234%" height="15" fill="rgb(216,84,49)" fg:x="4172" fg:w="1"/><text x="97.8178%" y="591.50"></text></g><g><title>udp_latency_test`ec_laplace_decode (1 samples, 0.02%)</title><rect x="97.5678%" y="565" width="0.0234%" height="15" fill="rgb(214,194,35)" fg:x="4172" fg:w="1"/><text x="97.8178%" y="575.50"></text></g><g><title>udp_latency_test`silk_PLC_glue_frames (1 samples, 0.02%)</title><rect x="97.5912%" y="581" width="0.0234%" height="15" fill="rgb(249,28,3)" fg:x="4173" fg:w="1"/><text x="97.8412%" y="591.50"></text></g><g><title>udp_latency_test`ec_dec_icdf (1 samples, 0.02%)</title><rect x="97.6146%" y="565" width="0.0234%" height="15" fill="rgb(222,56,52)" fg:x="4174" fg:w="1"/><text x="97.8646%" y="575.50"></text></g><g><title>udp_latency_test`silk_decode_core (1 samples, 0.02%)</title><rect x="97.6380%" y="565" width="0.0234%" height="15" fill="rgb(245,217,50)" fg:x="4175" fg:w="1"/><text x="97.8880%" y="575.50"></text></g><g><title>udp_latency_test`opus::Decoder::decode_float (14 samples, 0.33%)</title><rect x="97.3573%" y="661" width="0.3274%" height="15" fill="rgb(213,201,24)" fg:x="4163" fg:w="14"/><text x="97.6073%" y="671.50"></text></g><g><title>udp_latency_test`opus_decode_float (14 samples, 0.33%)</title><rect x="97.3573%" y="645" width="0.3274%" height="15" fill="rgb(248,116,28)" fg:x="4163" fg:w="14"/><text x="97.6073%" y="655.50"></text></g><g><title>udp_latency_test`opus_decode_native (14 samples, 0.33%)</title><rect x="97.3573%" y="629" width="0.3274%" height="15" fill="rgb(219,72,43)" fg:x="4163" fg:w="14"/><text x="97.6073%" y="639.50"></text></g><g><title>udp_latency_test`opus_decode_frame (14 samples, 0.33%)</title><rect x="97.3573%" y="613" width="0.3274%" height="15" fill="rgb(209,138,14)" fg:x="4163" fg:w="14"/><text x="97.6073%" y="623.50"></text></g><g><title>udp_latency_test`silk_Decode (4 samples, 0.09%)</title><rect x="97.5912%" y="597" width="0.0935%" height="15" fill="rgb(222,18,33)" fg:x="4173" fg:w="4"/><text x="97.8412%" y="607.50"></text></g><g><title>udp_latency_test`silk_decode_frame (3 samples, 0.07%)</title><rect x="97.6146%" y="581" width="0.0702%" height="15" fill="rgb(213,199,7)" fg:x="4174" fg:w="3"/><text x="97.8646%" y="591.50"></text></g><g><title>udp_latency_test`silk_decode_parameters (1 samples, 0.02%)</title><rect x="97.6614%" y="565" width="0.0234%" height="15" fill="rgb(250,110,10)" fg:x="4176" fg:w="1"/><text x="97.9114%" y="575.50"></text></g><g><title>udp_latency_test`silk_NLSF2A (1 samples, 0.02%)</title><rect x="97.6614%" y="549" width="0.0234%" height="15" fill="rgb(248,123,6)" fg:x="4176" fg:w="1"/><text x="97.9114%" y="559.50"></text></g><g><title>udp_latency_test`hp_cutoff (3 samples, 0.07%)</title><rect x="97.6848%" y="629" width="0.0702%" height="15" fill="rgb(206,91,31)" fg:x="4177" fg:w="3"/><text x="97.9348%" y="639.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="97.8251%" y="597" width="0.0234%" height="15" fill="rgb(211,154,13)" fg:x="4183" fg:w="1"/><text x="98.0751%" y="607.50"></text></g><g><title>udp_latency_test`clt_compute_allocation (1 samples, 0.02%)</title><rect x="97.8485%" y="597" width="0.0234%" height="15" fill="rgb(225,148,7)" fg:x="4184" fg:w="1"/><text x="98.0985%" y="607.50"></text></g><g><title>udp_latency_test`compute_mdcts (1 samples, 0.02%)</title><rect x="97.8718%" y="597" width="0.0234%" height="15" fill="rgb(220,160,43)" fg:x="4185" fg:w="1"/><text x="98.1218%" y="607.50"></text></g><g><title>udp_latency_test`clt_mdct_forward_c (1 samples, 0.02%)</title><rect x="97.8718%" y="581" width="0.0234%" height="15" fill="rgb(213,52,39)" fg:x="4185" fg:w="1"/><text x="98.1218%" y="591.50"></text></g><g><title>udp_latency_test`dynalloc_analysis (2 samples, 0.05%)</title><rect x="97.8952%" y="597" width="0.0468%" height="15" fill="rgb(243,137,7)" fg:x="4186" fg:w="2"/><text x="98.1452%" y="607.50"></text></g><g><title>udp_latency_test`exp_rotation (1 samples, 0.02%)</title><rect x="97.9654%" y="533" width="0.0234%" height="15" fill="rgb(230,79,13)" fg:x="4189" fg:w="1"/><text x="98.2154%" y="543.50"></text></g><g><title>udp_latency_test`quant_all_bands (3 samples, 0.07%)</title><rect x="97.9420%" y="597" width="0.0702%" height="15" fill="rgb(247,105,23)" fg:x="4188" fg:w="3"/><text x="98.1920%" y="607.50"></text></g><g><title>udp_latency_test`quant_band (3 samples, 0.07%)</title><rect x="97.9420%" y="581" width="0.0702%" height="15" fill="rgb(223,179,41)" fg:x="4188" fg:w="3"/><text x="98.1920%" y="591.50"></text></g><g><title>udp_latency_test`quant_partition (2 samples, 0.05%)</title><rect x="97.9654%" y="565" width="0.0468%" height="15" fill="rgb(218,9,34)" fg:x="4189" fg:w="2"/><text x="98.2154%" y="575.50"></text></g><g><title>udp_latency_test`alg_quant (2 samples, 0.05%)</title><rect x="97.9654%" y="549" width="0.0468%" height="15" fill="rgb(222,106,8)" fg:x="4189" fg:w="2"/><text x="98.2154%" y="559.50"></text></g><g><title>udp_latency_test`op_pvq_search_c (1 samples, 0.02%)</title><rect x="97.9888%" y="533" width="0.0234%" height="15" fill="rgb(211,220,0)" fg:x="4190" fg:w="1"/><text x="98.2388%" y="543.50"></text></g><g><title>udp_latency_test`quant_coarse_energy (1 samples, 0.02%)</title><rect x="98.0122%" y="597" width="0.0234%" height="15" fill="rgb(229,52,16)" fg:x="4191" fg:w="1"/><text x="98.2622%" y="607.50"></text></g><g><title>udp_latency_test`quant_coarse_energy_impl (1 samples, 0.02%)</title><rect x="98.0122%" y="581" width="0.0234%" height="15" fill="rgb(212,155,18)" fg:x="4191" fg:w="1"/><text x="98.2622%" y="591.50"></text></g><g><title>udp_latency_test`celt_encode_with_ec (15 samples, 0.35%)</title><rect x="97.7783%" y="613" width="0.3508%" height="15" fill="rgb(242,21,14)" fg:x="4181" fg:w="15"/><text x="98.0283%" y="623.50"></text></g><g><title>udp_latency_test`transient_analysis (4 samples, 0.09%)</title><rect x="98.0355%" y="597" width="0.0935%" height="15" fill="rgb(222,19,48)" fg:x="4192" fg:w="4"/><text x="98.2855%" y="607.50"></text></g><g><title>udp_latency_test`silk_VAD_GetSA_Q8_c (1 samples, 0.02%)</title><rect x="98.1525%" y="597" width="0.0234%" height="15" fill="rgb(232,45,27)" fg:x="4197" fg:w="1"/><text x="98.4025%" y="607.50"></text></g><g><title>udp_latency_test`silk_lin2log (1 samples, 0.02%)</title><rect x="98.1759%" y="581" width="0.0234%" height="15" fill="rgb(249,103,42)" fg:x="4198" fg:w="1"/><text x="98.4259%" y="591.50"></text></g><g><title>udp_latency_test`silk_encode_do_VAD_FLP (2 samples, 0.05%)</title><rect x="98.1759%" y="597" width="0.0468%" height="15" fill="rgb(246,81,33)" fg:x="4198" fg:w="2"/><text x="98.4259%" y="607.50"></text></g><g><title>udp_latency_test`silk_sigm_Q15 (1 samples, 0.02%)</title><rect x="98.1993%" y="581" width="0.0234%" height="15" fill="rgb(252,33,42)" fg:x="4199" fg:w="1"/><text x="98.4493%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="98.2226%" y="549" width="0.0234%" height="15" fill="rgb(209,212,41)" fg:x="4200" fg:w="1"/><text x="98.4726%" y="559.50"></text></g><g><title>udp_latency_test`silk_noise_shape_quantizer_del_dec (14 samples, 0.33%)</title><rect x="98.2460%" y="549" width="0.3274%" height="15" fill="rgb(207,154,6)" fg:x="4201" fg:w="14"/><text x="98.4960%" y="559.50"></text></g><g><title>udp_latency_test`silk_NSQ_wrapper_FLP (16 samples, 0.37%)</title><rect x="98.2226%" y="581" width="0.3742%" height="15" fill="rgb(223,64,47)" fg:x="4200" fg:w="16"/><text x="98.4726%" y="591.50"></text></g><g><title>udp_latency_test`silk_NSQ_del_dec_c (16 samples, 0.37%)</title><rect x="98.2226%" y="565" width="0.3742%" height="15" fill="rgb(211,161,38)" fg:x="4200" fg:w="16"/><text x="98.4726%" y="575.50"></text></g><g><title>udp_latency_test`silk_noise_shape_quantizer_short_prediction_neon (1 samples, 0.02%)</title><rect x="98.5734%" y="549" width="0.0234%" height="15" fill="rgb(219,138,40)" fg:x="4215" fg:w="1"/><text x="98.8234%" y="559.50"></text></g><g><title>udp_latency_test`silk_A2NLSF_FLP (2 samples, 0.05%)</title><rect x="98.5968%" y="549" width="0.0468%" height="15" fill="rgb(241,228,46)" fg:x="4216" fg:w="2"/><text x="98.8468%" y="559.50"></text></g><g><title>udp_latency_test`silk_A2NLSF (2 samples, 0.05%)</title><rect x="98.5968%" y="533" width="0.0468%" height="15" fill="rgb(223,209,38)" fg:x="4216" fg:w="2"/><text x="98.8468%" y="543.50"></text></g><g><title>udp_latency_test`silk_burg_modified_FLP (3 samples, 0.07%)</title><rect x="98.6436%" y="549" width="0.0702%" height="15" fill="rgb(236,164,45)" fg:x="4218" fg:w="3"/><text x="98.8936%" y="559.50"></text></g><g><title>udp_latency_test`silk_find_LPC_FLP (8 samples, 0.19%)</title><rect x="98.5968%" y="565" width="0.1871%" height="15" fill="rgb(231,15,5)" fg:x="4216" fg:w="8"/><text x="98.8468%" y="575.50"></text></g><g><title>udp_latency_test`silk_inner_product_FLP (3 samples, 0.07%)</title><rect x="98.7138%" y="549" width="0.0702%" height="15" fill="rgb(252,35,15)" fg:x="4221" fg:w="3"/><text x="98.9638%" y="559.50"></text></g><g><title>udp_latency_test`silk_find_pred_coefs_FLP (13 samples, 0.30%)</title><rect x="98.5968%" y="581" width="0.3040%" height="15" fill="rgb(248,181,18)" fg:x="4216" fg:w="13"/><text x="98.8468%" y="591.50"></text></g><g><title>udp_latency_test`silk_process_NLSFs_FLP (5 samples, 0.12%)</title><rect x="98.7839%" y="565" width="0.1169%" height="15" fill="rgb(233,39,42)" fg:x="4224" fg:w="5"/><text x="99.0339%" y="575.50"></text></g><g><title>udp_latency_test`silk_process_NLSFs (5 samples, 0.12%)</title><rect x="98.7839%" y="549" width="0.1169%" height="15" fill="rgb(238,110,33)" fg:x="4224" fg:w="5"/><text x="99.0339%" y="559.50"></text></g><g><title>udp_latency_test`silk_NLSF_encode (5 samples, 0.12%)</title><rect x="98.7839%" y="533" width="0.1169%" height="15" fill="rgb(233,195,10)" fg:x="4224" fg:w="5"/><text x="99.0339%" y="543.50"></text></g><g><title>udp_latency_test`silk_NLSF_del_dec_quant (5 samples, 0.12%)</title><rect x="98.7839%" y="517" width="0.1169%" height="15" fill="rgb(254,105,3)" fg:x="4224" fg:w="5"/><text x="99.0339%" y="527.50"></text></g><g><title>udp_latency_test`silk_encode_frame_FLP (33 samples, 0.77%)</title><rect x="98.2226%" y="597" width="0.7717%" height="15" fill="rgb(221,225,9)" fg:x="4200" fg:w="33"/><text x="98.4726%" y="607.50"></text></g><g><title>udp_latency_test`silk_noise_shape_analysis_FLP (4 samples, 0.09%)</title><rect x="98.9008%" y="581" width="0.0935%" height="15" fill="rgb(224,227,45)" fg:x="4229" fg:w="4"/><text x="99.1508%" y="591.50"></text></g><g><title>udp_latency_test`silk_warped_autocorrelation_FLP (4 samples, 0.09%)</title><rect x="98.9008%" y="565" width="0.0935%" height="15" fill="rgb(229,198,43)" fg:x="4229" fg:w="4"/><text x="99.1508%" y="575.50"></text></g><g><title>udp_latency_test`silk_Encode (38 samples, 0.89%)</title><rect x="98.1291%" y="613" width="0.8887%" height="15" fill="rgb(206,209,35)" fg:x="4196" fg:w="38"/><text x="98.3791%" y="623.50"></text></g><g><title>udp_latency_test`silk_find_pitch_lags_FLP (1 samples, 0.02%)</title><rect x="98.9944%" y="597" width="0.0234%" height="15" fill="rgb(245,195,53)" fg:x="4233" fg:w="1"/><text x="99.2444%" y="607.50"></text></g><g><title>udp_latency_test`opus::Encoder::encode_float (58 samples, 1.36%)</title><rect x="97.6848%" y="661" width="1.3564%" height="15" fill="rgb(240,92,26)" fg:x="4177" fg:w="58"/><text x="97.9348%" y="671.50"></text></g><g><title>udp_latency_test`opus_encode_float (58 samples, 1.36%)</title><rect x="97.6848%" y="645" width="1.3564%" height="15" fill="rgb(207,40,23)" fg:x="4177" fg:w="58"/><text x="97.9348%" y="655.50"></text></g><g><title>udp_latency_test`opus_encode_native (55 samples, 1.29%)</title><rect x="97.7549%" y="629" width="1.2862%" height="15" fill="rgb(223,111,35)" fg:x="4180" fg:w="55"/><text x="98.0049%" y="639.50"></text></g><g><title>udp_latency_test`tonality_get_info (1 samples, 0.02%)</title><rect x="99.0178%" y="613" width="0.0234%" height="15" fill="rgb(229,147,28)" fg:x="4234" fg:w="1"/><text x="99.2678%" y="623.50"></text></g><g><title>udp_latency_test`std::sync::mpmc::array::Channel&lt;T&gt;::recv (3 samples, 0.07%)</title><rect x="99.0412%" y="661" width="0.0702%" height="15" fill="rgb(211,29,28)" fg:x="4235" fg:w="3"/><text x="99.2912%" y="671.50"></text></g><g><title>udp_latency_test`std::sync::mpmc::array::Channel&lt;T&gt;::recv::_{{closure}} (2 samples, 0.05%)</title><rect x="99.0645%" y="645" width="0.0468%" height="15" fill="rgb(228,72,33)" fg:x="4236" fg:w="2"/><text x="99.3145%" y="655.50"></text></g><g><title>udp_latency_test`std::thread::park (2 samples, 0.05%)</title><rect x="99.0645%" y="629" width="0.0468%" height="15" fill="rgb(205,214,31)" fg:x="4236" fg:w="2"/><text x="99.3145%" y="639.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_wait_slow (2 samples, 0.05%)</title><rect x="99.0645%" y="613" width="0.0468%" height="15" fill="rgb(224,111,15)" fg:x="4236" fg:w="2"/><text x="99.3145%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_wait_trap (2 samples, 0.05%)</title><rect x="99.0645%" y="597" width="0.0468%" height="15" fill="rgb(253,21,26)" fg:x="4236" fg:w="2"/><text x="99.3145%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="99.1113%" y="645" width="0.0234%" height="15" fill="rgb(245,139,43)" fg:x="4238" fg:w="1"/><text x="99.3613%" y="655.50"></text></g><g><title>udp_latency_test`ComfortNoise (1 samples, 0.02%)</title><rect x="99.1347%" y="565" width="0.0234%" height="15" fill="rgb(252,170,7)" fg:x="4239" fg:w="1"/><text x="99.3847%" y="575.50"></text></g><g><title>udp_latency_test`FilterFarNEON (1 samples, 0.02%)</title><rect x="99.1581%" y="565" width="0.0234%" height="15" fill="rgb(231,118,14)" fg:x="4240" fg:w="1"/><text x="99.4081%" y="575.50"></text></g><g><title>udp_latency_test`ComfortNoise (1 samples, 0.02%)</title><rect x="99.2049%" y="549" width="0.0234%" height="15" fill="rgb(238,83,0)" fg:x="4242" fg:w="1"/><text x="99.4549%" y="559.50"></text></g><g><title>libsystem_m.dylib`__sincos_stret (1 samples, 0.02%)</title><rect x="99.2049%" y="533" width="0.0234%" height="15" fill="rgb(221,39,39)" fg:x="4242" fg:w="1"/><text x="99.4549%" y="543.50"></text></g><g><title>libsystem_m.dylib`0x000000019de2ebe4 (1 samples, 0.02%)</title><rect x="99.2049%" y="517" width="0.0234%" height="15" fill="rgb(222,119,46)" fg:x="4242" fg:w="1"/><text x="99.4549%" y="527.50"></text></g><g><title>udp_latency_test`aec_rdft_forward_128 (1 samples, 0.02%)</title><rect x="99.2283%" y="533" width="0.0234%" height="15" fill="rgb(222,165,49)" fg:x="4243" fg:w="1"/><text x="99.4783%" y="543.50"></text></g><g><title>udp_latency_test`cft1st_128_neon (1 samples, 0.02%)</title><rect x="99.2283%" y="517" width="0.0234%" height="15" fill="rgb(219,113,52)" fg:x="4243" fg:w="1"/><text x="99.4783%" y="527.50"></text></g><g><title>udp_latency_test`bitrv2_128_C (1 samples, 0.02%)</title><rect x="99.2516%" y="533" width="0.0234%" height="15" fill="rgb(214,7,15)" fg:x="4244" fg:w="1"/><text x="99.5016%" y="543.50"></text></g><g><title>udp_latency_test`cft1st_128_neon (1 samples, 0.02%)</title><rect x="99.2750%" y="533" width="0.0234%" height="15" fill="rgb(235,32,4)" fg:x="4245" fg:w="1"/><text x="99.5250%" y="543.50"></text></g><g><title>udp_latency_test`cftbsub_128_C (2 samples, 0.05%)</title><rect x="99.2984%" y="533" width="0.0468%" height="15" fill="rgb(238,90,54)" fg:x="4246" fg:w="2"/><text x="99.5484%" y="543.50"></text></g><g><title>udp_latency_test`cftmdl_128_neon (2 samples, 0.05%)</title><rect x="99.3452%" y="533" width="0.0468%" height="15" fill="rgb(213,208,19)" fg:x="4248" fg:w="2"/><text x="99.5952%" y="543.50"></text></g><g><title>udp_latency_test`rftbsub_128_neon (1 samples, 0.02%)</title><rect x="99.3920%" y="533" width="0.0234%" height="15" fill="rgb(233,156,4)" fg:x="4250" fg:w="1"/><text x="99.6420%" y="543.50"></text></g><g><title>udp_latency_test`FilterAdaptationNEON (9 samples, 0.21%)</title><rect x="99.2283%" y="549" width="0.2105%" height="15" fill="rgb(207,194,5)" fg:x="4243" fg:w="9"/><text x="99.4783%" y="559.50"></text></g><g><title>udp_latency_test`rftfsub_128_neon (1 samples, 0.02%)</title><rect x="99.4153%" y="533" width="0.0234%" height="15" fill="rgb(206,111,30)" fg:x="4251" fg:w="1"/><text x="99.6653%" y="543.50"></text></g><g><title>udp_latency_test`OverdriveAndSuppressNEON (1 samples, 0.02%)</title><rect x="99.4387%" y="549" width="0.0234%" height="15" fill="rgb(243,70,54)" fg:x="4252" fg:w="1"/><text x="99.6887%" y="559.50"></text></g><g><title>libsystem_m.dylib`powf (1 samples, 0.02%)</title><rect x="99.4387%" y="533" width="0.0234%" height="15" fill="rgb(242,28,8)" fg:x="4252" fg:w="1"/><text x="99.6887%" y="543.50"></text></g><g><title>udp_latency_test`SubbandCoherenceNEON (1 samples, 0.02%)</title><rect x="99.4621%" y="549" width="0.0234%" height="15" fill="rgb(219,106,18)" fg:x="4253" fg:w="1"/><text x="99.7121%" y="559.50"></text></g><g><title>udp_latency_test`WebRtc_ProcessBinarySpectrum (1 samples, 0.02%)</title><rect x="99.4855%" y="549" width="0.0234%" height="15" fill="rgb(244,222,10)" fg:x="4254" fg:w="1"/><text x="99.7355%" y="559.50"></text></g><g><title>udp_latency_test`WebRtc_WriteBuffer (1 samples, 0.02%)</title><rect x="99.5089%" y="549" width="0.0234%" height="15" fill="rgb(236,179,52)" fg:x="4255" fg:w="1"/><text x="99.7589%" y="559.50"></text></g><g><title>udp_latency_test`WebRtcAec_ProcessFrames (16 samples, 0.37%)</title><rect x="99.1815%" y="565" width="0.3742%" height="15" fill="rgb(213,23,39)" fg:x="4241" fg:w="16"/><text x="99.4315%" y="575.50"></text></g><g><title>udp_latency_test`aec_rdft_forward_128 (1 samples, 0.02%)</title><rect x="99.5323%" y="549" width="0.0234%" height="15" fill="rgb(238,48,10)" fg:x="4256" fg:w="1"/><text x="99.7823%" y="559.50"></text></g><g><title>udp_latency_test`cftfsub_128_C (1 samples, 0.02%)</title><rect x="99.5323%" y="533" width="0.0234%" height="15" fill="rgb(251,196,23)" fg:x="4256" fg:w="1"/><text x="99.7823%" y="543.50"></text></g><g><title>udp_latency_test`webrtc::EchoCancellationImpl::ProcessCaptureAudio (19 samples, 0.44%)</title><rect x="99.1347%" y="597" width="0.4443%" height="15" fill="rgb(250,152,24)" fg:x="4239" fg:w="19"/><text x="99.3847%" y="607.50"></text></g><g><title>udp_latency_test`WebRtcAec_Process (19 samples, 0.44%)</title><rect x="99.1347%" y="581" width="0.4443%" height="15" fill="rgb(209,150,17)" fg:x="4239" fg:w="19"/><text x="99.3847%" y="591.50"></text></g><g><title>udp_latency_test`WebRtc_ReadBuffer (1 samples, 0.02%)</title><rect x="99.5557%" y="565" width="0.0234%" height="15" fill="rgb(234,202,34)" fg:x="4257" fg:w="1"/><text x="99.8057%" y="575.50"></text></g><g><title>udp_latency_test`webrtc::NoiseSuppressionImpl::AnalyzeCaptureAudio (3 samples, 0.07%)</title><rect x="99.5790%" y="597" width="0.0702%" height="15" fill="rgb(253,148,53)" fg:x="4258" fg:w="3"/><text x="99.8290%" y="607.50"></text></g><g><title>udp_latency_test`WebRtcNs_AnalyzeCore (3 samples, 0.07%)</title><rect x="99.5790%" y="581" width="0.0702%" height="15" fill="rgb(218,129,16)" fg:x="4258" fg:w="3"/><text x="99.8290%" y="591.50"></text></g><g><title>libsystem_m.dylib`log (3 samples, 0.07%)</title><rect x="99.5790%" y="565" width="0.0702%" height="15" fill="rgb(216,85,19)" fg:x="4258" fg:w="3"/><text x="99.8290%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="99.6492%" y="581" width="0.0234%" height="15" fill="rgb(235,228,7)" fg:x="4261" fg:w="1"/><text x="99.8992%" y="591.50"></text></g><g><title>udp_latency_test`webrtc::SplittingFilter::Analysis (6 samples, 0.14%)</title><rect x="99.6492%" y="597" width="0.1403%" height="15" fill="rgb(245,175,0)" fg:x="4261" fg:w="6"/><text x="99.8992%" y="607.50"></text></g><g><title>udp_latency_test`webrtc::ThreeBandFilterBank::Analysis (5 samples, 0.12%)</title><rect x="99.6726%" y="581" width="0.1169%" height="15" fill="rgb(208,168,36)" fg:x="4262" fg:w="5"/><text x="99.9226%" y="591.50"></text></g><g><title>udp_latency_test`webrtc::SparseFIRFilter::Filter (3 samples, 0.07%)</title><rect x="99.7194%" y="565" width="0.0702%" height="15" fill="rgb(246,171,24)" fg:x="4264" fg:w="3"/><text x="99.9694%" y="575.50"></text></g><g><title>udp_latency_test`webrtc::SplittingFilter::Synthesis (6 samples, 0.14%)</title><rect x="99.7895%" y="597" width="0.1403%" height="15" fill="rgb(215,142,24)" fg:x="4267" fg:w="6"/><text x="100.0395%" y="607.50"></text></g><g><title>udp_latency_test`webrtc::ThreeBandFilterBank::Synthesis (6 samples, 0.14%)</title><rect x="99.7895%" y="581" width="0.1403%" height="15" fill="rgb(250,187,7)" fg:x="4267" fg:w="6"/><text x="100.0395%" y="591.50"></text></g><g><title>udp_latency_test`webrtc::SparseFIRFilter::Filter (5 samples, 0.12%)</title><rect x="99.8129%" y="565" width="0.1169%" height="15" fill="rgb(228,66,33)" fg:x="4268" fg:w="5"/><text x="100.0629%" y="575.50"></text></g><g><title>udp_latency_test`webrtc_audio_processing::Processor::process_capture_frame (36 samples, 0.84%)</title><rect x="99.1113%" y="661" width="0.8419%" height="15" fill="rgb(234,215,21)" fg:x="4238" fg:w="36"/><text x="99.3613%" y="671.50"></text></g><g><title>udp_latency_test`webrtc_audio_processing::AudioProcessing::process_capture_frame (35 samples, 0.82%)</title><rect x="99.1347%" y="645" width="0.8185%" height="15" fill="rgb(222,191,20)" fg:x="4239" fg:w="35"/><text x="99.3847%" y="655.50"></text></g><g><title>udp_latency_test`webrtc::AudioProcessingImpl::ProcessStream (35 samples, 0.82%)</title><rect x="99.1347%" y="629" width="0.8185%" height="15" fill="rgb(245,79,54)" fg:x="4239" fg:w="35"/><text x="99.3847%" y="639.50"></text></g><g><title>udp_latency_test`webrtc::AudioProcessingImpl::ProcessStreamLocked (35 samples, 0.82%)</title><rect x="99.1347%" y="613" width="0.8185%" height="15" fill="rgb(240,10,37)" fg:x="4239" fg:w="35"/><text x="99.3847%" y="623.50"></text></g><g><title>udp_latency_test`webrtc::VoiceDetectionImpl::ProcessCaptureAudio (1 samples, 0.02%)</title><rect x="99.9298%" y="597" width="0.0234%" height="15" fill="rgb(214,192,32)" fg:x="4273" fg:w="1"/><text x="100.1798%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.02%)</title><rect x="99.9532%" y="645" width="0.0234%" height="15" fill="rgb(209,36,54)" fg:x="4274" fg:w="1"/><text x="100.2032%" y="655.50"></text></g><g><title>all (4,276 samples, 100%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(220,10,11)" fg:x="0" fg:w="4276"/><text x="0.2500%" y="767.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (4,236 samples, 99.06%)</title><rect x="0.9355%" y="741" width="99.0645%" height="15" fill="rgb(221,106,17)" fg:x="40" fg:w="4236"/><text x="1.1855%" y="751.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (4,236 samples, 99.06%)</title><rect x="0.9355%" y="725" width="99.0645%" height="15" fill="rgb(251,142,44)" fg:x="40" fg:w="4236"/><text x="1.1855%" y="735.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>udp_latency_test`std::sys::pal::unix::thread::Thread::new::thread_start (4,188 samples, 97.94%)</title><rect x="2.0580%" y="709" width="97.9420%" height="15" fill="rgb(238,13,15)" fg:x="88" fg:w="4188"/><text x="2.3080%" y="719.50">udp_latency_test`std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>udp_latency_test`core::ops::function::FnOnce::call_once{{vtable.shim}} (4,188 samples, 97.94%)</title><rect x="2.0580%" y="693" width="97.9420%" height="15" fill="rgb(208,107,27)" fg:x="88" fg:w="4188"/><text x="2.3080%" y="703.50">udp_latency_test`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>udp_latency_test`std::sys::backtrace::__rust_begin_short_backtrace (4,187 samples, 97.92%)</title><rect x="2.0814%" y="677" width="97.9186%" height="15" fill="rgb(205,136,37)" fg:x="89" fg:w="4187"/><text x="2.3314%" y="687.50">udp_latency_test`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>udp_latency_test`webrtc_audio_processing::Processor::process_render_frame (2 samples, 0.05%)</title><rect x="99.9532%" y="661" width="0.0468%" height="15" fill="rgb(250,205,27)" fg:x="4274" fg:w="2"/><text x="100.2032%" y="671.50"></text></g><g><title>udp_latency_test`webrtc_audio_processing::AudioProcessing::process_render_frame (1 samples, 0.02%)</title><rect x="99.9766%" y="645" width="0.0234%" height="15" fill="rgb(210,80,43)" fg:x="4275" fg:w="1"/><text x="100.2266%" y="655.50"></text></g><g><title>udp_latency_test`webrtc::AudioProcessingImpl::ProcessReverseStream (1 samples, 0.02%)</title><rect x="99.9766%" y="629" width="0.0234%" height="15" fill="rgb(247,160,36)" fg:x="4275" fg:w="1"/><text x="100.2266%" y="639.50"></text></g><g><title>udp_latency_test`webrtc::AudioProcessingImpl::AnalyzeReverseStream (1 samples, 0.02%)</title><rect x="99.9766%" y="613" width="0.0234%" height="15" fill="rgb(234,13,49)" fg:x="4275" fg:w="1"/><text x="100.2266%" y="623.50"></text></g><g><title>udp_latency_test`webrtc::AudioProcessingImpl::ProcessReverseStreamLocked (1 samples, 0.02%)</title><rect x="99.9766%" y="597" width="0.0234%" height="15" fill="rgb(234,122,0)" fg:x="4275" fg:w="1"/><text x="100.2266%" y="607.50"></text></g><g><title>udp_latency_test`webrtc::EchoCancellationImpl::ProcessRenderAudio (1 samples, 0.02%)</title><rect x="99.9766%" y="581" width="0.0234%" height="15" fill="rgb(207,146,38)" fg:x="4275" fg:w="1"/><text x="100.2266%" y="591.50"></text></g><g><title>udp_latency_test`WebRtcAec_BufferFarend (1 samples, 0.02%)</title><rect x="99.9766%" y="565" width="0.0234%" height="15" fill="rgb(207,177,25)" fg:x="4275" fg:w="1"/><text x="100.2266%" y="575.50"></text></g><g><title>udp_latency_test`WebRtcAec_BufferFarendPartition (1 samples, 0.02%)</title><rect x="99.9766%" y="549" width="0.0234%" height="15" fill="rgb(211,178,42)" fg:x="4275" fg:w="1"/><text x="100.2266%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="99.9766%" y="533" width="0.0234%" height="15" fill="rgb(230,69,54)" fg:x="4275" fg:w="1"/><text x="100.2266%" y="543.50"></text></g></svg></svg>